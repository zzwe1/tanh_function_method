(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    426527,       9373]
NotebookOptionsPosition[    422269,       9302]
NotebookOutlinePosition[    422684,       9319]
CellTagsIndexPosition[    422641,       9316]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.918335443111019*^9, 3.9183354463669734`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6258f761-c50d-4f57-b4a7-8eb7437aaf67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\:5b9a\:4e49\:5e38\:5fae\:5206\:65b9\:7a0b\:7ec4", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"eqns", "=", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "c"}], " ", 
         RowBox[{"U", "[", "x", "]"}]}], "-", 
        RowBox[{"q", " ", 
         RowBox[{
          RowBox[{"U", "[", "x", "]"}], "^", "3"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "/", "2"}], ")"}], " ", "q", " ", 
         RowBox[{"U", "[", "x", "]"}], " ", 
         RowBox[{"V", "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q", "/", "4"}], ")"}], " ", 
         RowBox[{
          RowBox[{"U", "''"}], "[", "x", "]"}]}]}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "c"}], " ", 
         RowBox[{"V", "[", "x", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "/", "4"}], ")"}], " ", "q", " ", 
         RowBox[{
          RowBox[{"V", "[", "x", "]"}], "^", "2"}]}], "-", 
        RowBox[{"3", " ", "q", " ", 
         RowBox[{
          RowBox[{"U", "[", "x", "]"}], "^", "2"}], " ", 
         RowBox[{"V", "[", "x", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", " ", 
           RowBox[{"q", "/", "4"}]}], ")"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"U", "'"}], "[", "x", "]"}], ")"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", " ", 
           RowBox[{"q", "/", "2"}]}], ")"}], " ", 
         RowBox[{"U", "[", "x", "]"}], " ", 
         RowBox[{
          RowBox[{"U", "''"}], "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "4"}], ")"}], " ", "q", " ", 
         RowBox[{
          RowBox[{"V", "''"}], "[", "x", "]"}]}]}]}], " ", 
      "\[IndentingNewLine]", "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"U", "->", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           SubscriptBox["a", "0"], " ", "+", 
           RowBox[{
            SubscriptBox["a", "1"], "*", 
            RowBox[{"P", "[", "x", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["b", "1"], "*", 
            RowBox[{
             RowBox[{"P", "[", "x", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}]}]}]}]}], "]"}]}], ",", " ", 
       RowBox[{"V", "->", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           SubscriptBox["c", "0"], " ", "+", 
           RowBox[{
            SubscriptBox["c", "1"], "*", 
            RowBox[{"P", "[", "x", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["c", "2"], "*", 
            RowBox[{
             RowBox[{"P", "[", "x", "]"}], "^", "2"}]}], "+", 
           RowBox[{
            SubscriptBox["d", "1"], "*", 
            RowBox[{
             RowBox[{"P", "[", "x", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}]}]}], "+", 
           RowBox[{
            SubscriptBox["d", "2"], "*", 
            RowBox[{
             RowBox[{"P", "[", "x", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"-", "2"}], ")"}]}]}]}]}], "]"}]}]}], "}"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.9162683511003575`*^9, 3.916268413208014*^9}, {
  3.9162686172107573`*^9, 3.916268674456815*^9}, {3.9162688592968636`*^9, 
  3.916268922861135*^9}, {3.91626907752206*^9, 3.9162691706497393`*^9}, {
  3.916269238120632*^9, 3.916269242241534*^9}, {3.916278061599934*^9, 
  3.916278063968361*^9}, {3.9167990420926495`*^9, 3.916799044046254*^9}, {
  3.9231747611353645`*^9, 3.923174765524216*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"26f16399-101c-4749-8336-ad901746abfe"],

Cell[TextData[{
 "\:7ea6\:675f\:65b9\:7a0b\:ff1a",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[CurlyPhi]", "'"}], 
     RowBox[{"(", "\[Xi]", ")"}]}], "=", 
    RowBox[{"k", "-", 
     SuperscriptBox[
      RowBox[{"\[CurlyPhi]", "(", "\[Xi]", ")"}], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"4e643929-2da1-404f-bc00-c6ed04a60b91"],
 "\:ff0c\:7136\:540e\:6c42\:4e8c\:6b21\:5bfc\:4ee3\:5165 \:89e3\:7684\:9009\
\:62e9\:6765\:81ea\:53c2\:8003\:6587\:732e\nCakicioglu H, Cinar M, Secer A, \
et al. On obtaining analytical soliton solutions of \
Drinfeld-Sokolov-Satsuma-Hirota equation via two efficient methods[J]. \
Physica Scripta, 2023, 99(1): 015220.\n"
}], "Text",
 CellChangeTimes->{{3.9197400764904165`*^9, 3.9197401081405563`*^9}, {
  3.919740143590707*^9, 3.9197401459505253`*^9}, {3.919740262620056*^9, 
  3.9197402727102275`*^9}, {3.919740304820025*^9, 3.9197403336300373`*^9}, {
  3.91974042737005*^9, 3.919740442109669*^9}, {3.921304966618129*^9, 
  3.9213049728045287`*^9}, {3.9219880115939627`*^9, 
  3.921988012133917*^9}},ExpressionUUID->"e8229659-df8f-4f86-a887-\
1cb6ac7c40aa"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.916269616787247*^9, 
  3.916269621442108*^9}},ExpressionUUID->"d2a30b36-3db8-4437-ab8e-\
e9d9a21dac54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "(*", "\:4f7f\:7528\:7ea6\:675f\:65b9\:7a0b\:8fdb\:884c\:66ff\:6362", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "\:8f6c\:6362\:6210\:5173\:4e8eP\:7684\:591a\:9879\:5f0f", "\:ff0c", 
    "\:5ffd\:7565x"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SubEqns", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"eqns", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"P", "'"}], "[", "x", "]"}], " ", "->", " ", 
          RowBox[{"k", "-", 
           RowBox[{
            RowBox[{"P", "[", "x", "]"}], "^", "2"}]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"P", "''"}], "[", "x", "]"}], "->", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          RowBox[{"P", "[", "x", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"k", "-", 
            RowBox[{
             RowBox[{"P", "[", "x", "]"}], "^", "2"}]}], ")"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"P", "[", "x", "]"}], "->", "P"}], "}"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:6bcf\:4e00\:9879\:4e58\:4e0aP\:56db\:6b21\:65b9", "\:ff0c", 
     "\:53d8\:4e3a\:6b63\:6b21\:7684\:591a\:9879\:5f0f"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expandedEqns", "=", 
     RowBox[{"Expand", "[", 
      RowBox[{"SubEqns", "*", 
       RowBox[{"P", "^", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"P", " ", "\:7684\:5404\:4e2a\:6b21\:5e42"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coeffEqns", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"CoefficientList", "[", 
       RowBox[{"expandedEqns", ",", "P"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\:5217\:51fa\:65b9\:7a0b\:7ec4", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"eqnList", "=", 
    RowBox[{"Thread", "[", 
     RowBox[{"coeffEqns", "==", "0"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.916269180588136*^9, 3.9162692214216375`*^9}, {
  3.9162693873618345`*^9, 3.916269410311591*^9}, {3.9162695139723372`*^9, 
  3.916269548801958*^9}, {3.916799947197467*^9, 3.9167999746299515`*^9}, {
  3.916800010627271*^9, 3.9168000760876884`*^9}, {3.9181960027907205`*^9, 
  3.9181960145211616`*^9}, {3.9197404053601456`*^9, 3.9197404118405695`*^9}, {
  3.921988077303975*^9, 3.9219880775840187`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"c236e668-494b-41c8-b878-3b2816f5cc0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubscriptBox["b", "1"]}], "-", 
     RowBox[{"q", " ", 
      SubsuperscriptBox["b", "1", "3"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubsuperscriptBox["b", "1", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["d", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "c"}], " ", 
      SubscriptBox["b", "1"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "k", " ", "q", " ", 
      SubscriptBox["b", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "0", "2"], " ", 
      SubscriptBox["b", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubsuperscriptBox["b", "1", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "0"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["d", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "c"}], " ", 
      SubscriptBox["a", "0"]}], "-", 
     RowBox[{"q", " ", 
      SubsuperscriptBox["a", "0", "3"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["c", "0"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["d", "1"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "c"}], " ", 
      SubscriptBox["a", "1"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "k", " ", "q", " ", 
      SubscriptBox["a", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "0", "2"], " ", 
      SubscriptBox["a", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"], " ", 
      SubscriptBox["b", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["c", "0"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubsuperscriptBox["a", "1", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"q", " ", 
        SubscriptBox["a", "1"]}], "2"]}], "-", 
     RowBox[{"q", " ", 
      SubsuperscriptBox["a", "1", "3"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["15", "4"], " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubsuperscriptBox["b", "1", "2"]}], "-", 
     RowBox[{
      FractionBox["3", "2"], " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubscriptBox["d", "2"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["b", "1", "2"], " ", 
      SubscriptBox["d", "2"]}], "+", 
     FractionBox[
      RowBox[{"3", " ", "q", " ", 
       SubsuperscriptBox["d", "2", "2"]}], "4"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["b", "1"]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubscriptBox["d", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["b", "1", "2"], " ", 
      SubscriptBox["d", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["d", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["d", "1"], " ", 
      SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["3", "2"], " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"]}], "-", 
     RowBox[{
      FractionBox["9", "2"], " ", "k", " ", "q", " ", 
      SubsuperscriptBox["b", "1", "2"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["b", "1", "2"], " ", 
      SubscriptBox["c", "0"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["d", "1"]}], "+", 
     FractionBox[
      RowBox[{"3", " ", "q", " ", 
       SubsuperscriptBox["d", "1", "2"]}], "4"], "-", 
     RowBox[{"c", " ", 
      SubscriptBox["d", "2"]}], "+", 
     RowBox[{"2", " ", "k", " ", "q", " ", 
      SubscriptBox["d", "2"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "0", "2"], " ", 
      SubscriptBox["d", "2"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["d", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "0"], " ", 
      SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "k", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["b", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "0"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["b", "1", "2"], " ", 
      SubscriptBox["c", "1"]}], "-", 
     RowBox[{"c", " ", 
      SubscriptBox["d", "1"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "k", " ", "q", " ", 
      SubscriptBox["d", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "0", "2"], " ", 
      SubscriptBox["d", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["d", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "0"], " ", 
      SubscriptBox["d", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["d", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "1"], " ", 
      SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["3", "4"], " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"]}], "-", 
     RowBox[{"3", " ", "k", " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"]}], "+", 
     FractionBox[
      RowBox[{"3", " ", "q", " ", 
       SubsuperscriptBox["b", "1", "2"]}], "4"], "-", 
     RowBox[{"c", " ", 
      SubscriptBox["c", "0"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "0", "2"], " ", 
      SubscriptBox["c", "0"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "0"]}], "+", 
     FractionBox[
      RowBox[{"3", " ", "q", " ", 
       SubsuperscriptBox["c", "0", "2"]}], "4"], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "1"]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["k", "2"], " ", "q", " ", 
      SubscriptBox["c", "2"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["b", "1", "2"], " ", 
      SubscriptBox["c", "2"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["d", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "1"], " ", 
      SubscriptBox["d", "1"]}], "-", 
     FractionBox[
      RowBox[{"q", " ", 
       SubscriptBox["d", "2"]}], "2"], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"], " ", 
      SubscriptBox["d", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "2"], " ", 
      SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "k", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["c", "0"]}], "-", 
     RowBox[{"c", " ", 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "k", " ", "q", " ", 
      SubscriptBox["c", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "0", "2"], " ", 
      SubscriptBox["c", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "0"], " ", 
      SubscriptBox["c", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "2"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"], " ", 
      SubscriptBox["d", "1"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "2"], " ", 
      SubscriptBox["d", "1"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["9", "2"]}], " ", "k", " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"], " ", 
      SubscriptBox["c", "0"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["c", "1"]}], "+", 
     FractionBox[
      RowBox[{"3", " ", "q", " ", 
       SubsuperscriptBox["c", "1", "2"]}], "4"], "-", 
     RowBox[{"c", " ", 
      SubscriptBox["c", "2"]}], "+", 
     RowBox[{"2", " ", "k", " ", "q", " ", 
      SubscriptBox["c", "2"]}], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "0", "2"], " ", 
      SubscriptBox["c", "2"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["b", "1"], " ", 
      SubscriptBox["c", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "0"], " ", 
      SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"]}], "-", 
     FractionBox[
      RowBox[{"q", " ", 
       SubscriptBox["c", "1"]}], "2"], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"], " ", 
      SubscriptBox["c", "1"]}], "-", 
     RowBox[{"6", " ", "q", " ", 
      SubscriptBox["a", "0"], " ", 
      SubscriptBox["a", "1"], " ", 
      SubscriptBox["c", "2"]}], "+", 
     RowBox[{
      FractionBox["3", "2"], " ", "q", " ", 
      SubscriptBox["c", "1"], " ", 
      SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"15", " ", "q", " ", 
       SubsuperscriptBox["a", "1", "2"]}], "4"], "-", 
     FractionBox[
      RowBox[{"3", " ", "q", " ", 
       SubscriptBox["c", "2"]}], "2"], "-", 
     RowBox[{"3", " ", "q", " ", 
      SubsuperscriptBox["a", "1", "2"], " ", 
      SubscriptBox["c", "2"]}], "+", 
     FractionBox[
      RowBox[{"3", " ", "q", " ", 
       SubsuperscriptBox["c", "2", "2"]}], "4"]}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9219880780738688`*^9, 3.9231747927493477`*^9, 
  3.9231954631590548`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"82c812db-5fa0-4fb7-a446-b9b0022239f2"]
}, Open  ]],

Cell["\:65b9\:7a0b\:7ec4\:5c55\:793a", "Text",
 CellChangeTimes->{{3.9231748900951695`*^9, 3.92317489138896*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"dadb237d-ac88-425e-82a2-b658da8bf34a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Exponent", "[", 
  RowBox[{"expandedEqns", ",", "P"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqnShow", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", " ", "==", "0"}], "&"}], "/@", "coeffEqns"}], " ", "/.", 
    RowBox[{"P", "->", "\[Phi]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allP", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Inactivate", "[", 
        RowBox[{
         SuperscriptBox["\[Phi]", "n"], ",", "Power"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Inactivate", "[", 
        RowBox[{
         SuperscriptBox["\[Phi]", "n"], ",", "Power"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "8"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"allP", ",", "eqnShow"}], " ", "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.923174900114175*^9, 3.9231749265842037`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1047973f-9852-431e-a981-0e547f2437db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.9231749145784235`*^9, 3.9231749271939125`*^9}, 
   3.923195466695904*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9cc10722-9fa0-45ea-a8ec-dcfaa85a6532"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "0"}], "True"},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "1"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubscriptBox["b", "1"]}], "-", 
       RowBox[{"q", " ", 
        SubsuperscriptBox["b", "1", "3"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "2"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubsuperscriptBox["b", "1", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["d", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "3"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", 
        SubscriptBox["b", "1"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "k", " ", "q", " ", 
        SubscriptBox["b", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "0", "2"], " ", 
        SubscriptBox["b", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubsuperscriptBox["b", "1", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "0"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["d", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "4"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", 
        SubscriptBox["a", "0"]}], "-", 
       RowBox[{"q", " ", 
        SubsuperscriptBox["a", "0", "3"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["c", "0"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["d", "1"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "5"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", 
        SubscriptBox["a", "1"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "k", " ", "q", " ", 
        SubscriptBox["a", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "0", "2"], " ", 
        SubscriptBox["a", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"], " ", 
        SubscriptBox["b", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["c", "0"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["c", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "6"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubsuperscriptBox["a", "1", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["c", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "7"}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"q", " ", 
          SubscriptBox["a", "1"]}], "2"]}], "-", 
       RowBox[{"q", " ", 
        SubsuperscriptBox["a", "1", "3"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "0"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["15", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubsuperscriptBox["b", "1", "2"]}], "-", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubscriptBox["d", "2"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["b", "1", "2"], " ", 
        SubscriptBox["d", "2"]}], "+", 
       FractionBox[
        RowBox[{"3", " ", "q", " ", 
         SubsuperscriptBox["d", "2", "2"]}], "4"]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "1"}], 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["b", "1"]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubscriptBox["d", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["b", "1", "2"], " ", 
        SubscriptBox["d", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["d", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["d", "1"], " ", 
        SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "2"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["3", "2"], " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"]}], "-", 
       RowBox[{
        FractionBox["9", "2"], " ", "k", " ", "q", " ", 
        SubsuperscriptBox["b", "1", "2"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["b", "1", "2"], " ", 
        SubscriptBox["c", "0"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["d", "1"]}], "+", 
       FractionBox[
        RowBox[{"3", " ", "q", " ", 
         SubsuperscriptBox["d", "1", "2"]}], "4"], "-", 
       RowBox[{"c", " ", 
        SubscriptBox["d", "2"]}], "+", 
       RowBox[{"2", " ", "k", " ", "q", " ", 
        SubscriptBox["d", "2"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "0", "2"], " ", 
        SubscriptBox["d", "2"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["d", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "0"], " ", 
        SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "3"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "k", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["b", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "0"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["b", "1", "2"], " ", 
        SubscriptBox["c", "1"]}], "-", 
       RowBox[{"c", " ", 
        SubscriptBox["d", "1"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "k", " ", "q", " ", 
        SubscriptBox["d", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "0", "2"], " ", 
        SubscriptBox["d", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["d", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "0"], " ", 
        SubscriptBox["d", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["d", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "1"], " ", 
        SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "4"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["3", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"]}], "-", 
       RowBox[{"3", " ", "k", " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"]}], "+", 
       FractionBox[
        RowBox[{"3", " ", "q", " ", 
         SubsuperscriptBox["b", "1", "2"]}], "4"], "-", 
       RowBox[{"c", " ", 
        SubscriptBox["c", "0"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "0", "2"], " ", 
        SubscriptBox["c", "0"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "0"]}], "+", 
       FractionBox[
        RowBox[{"3", " ", "q", " ", 
         SubsuperscriptBox["c", "0", "2"]}], "4"], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "1"]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["k", "2"], " ", "q", " ", 
        SubscriptBox["c", "2"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["b", "1", "2"], " ", 
        SubscriptBox["c", "2"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["d", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "1"], " ", 
        SubscriptBox["d", "1"]}], "-", 
       FractionBox[
        RowBox[{"q", " ", 
         SubscriptBox["d", "2"]}], "2"], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"], " ", 
        SubscriptBox["d", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "2"], " ", 
        SubscriptBox["d", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "5"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "k", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["c", "0"]}], "-", 
       RowBox[{"c", " ", 
        SubscriptBox["c", "1"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "k", " ", "q", " ", 
        SubscriptBox["c", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "0", "2"], " ", 
        SubscriptBox["c", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "0"], " ", 
        SubscriptBox["c", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "2"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"], " ", 
        SubscriptBox["d", "1"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "2"], " ", 
        SubscriptBox["d", "1"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "6"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["9", "2"]}], " ", "k", " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"], " ", 
        SubscriptBox["c", "0"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["c", "1"]}], "+", 
       FractionBox[
        RowBox[{"3", " ", "q", " ", 
         SubsuperscriptBox["c", "1", "2"]}], "4"], "-", 
       RowBox[{"c", " ", 
        SubscriptBox["c", "2"]}], "+", 
       RowBox[{"2", " ", "k", " ", "q", " ", 
        SubscriptBox["c", "2"]}], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "0", "2"], " ", 
        SubscriptBox["c", "2"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["b", "1"], " ", 
        SubscriptBox["c", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "0"], " ", 
        SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "7"}], 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"]}], "-", 
       FractionBox[
        RowBox[{"q", " ", 
         SubscriptBox["c", "1"]}], "2"], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"], " ", 
        SubscriptBox["c", "1"]}], "-", 
       RowBox[{"6", " ", "q", " ", 
        SubscriptBox["a", "0"], " ", 
        SubscriptBox["a", "1"], " ", 
        SubscriptBox["c", "2"]}], "+", 
       RowBox[{
        FractionBox["3", "2"], " ", "q", " ", 
        SubscriptBox["c", "1"], " ", 
        SubscriptBox["c", "2"]}]}], "\[Equal]", "0"}]},
    {
     RowBox[{"\[Phi]", 
      TagBox["^",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"^"], "8"}], 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"15", " ", "q", " ", 
         SubsuperscriptBox["a", "1", "2"]}], "4"], "-", 
       FractionBox[
        RowBox[{"3", " ", "q", " ", 
         SubscriptBox["c", "2"]}], "2"], "-", 
       RowBox[{"3", " ", "q", " ", 
        SubsuperscriptBox["a", "1", "2"], " ", 
        SubscriptBox["c", "2"]}], "+", 
       FractionBox[
        RowBox[{"3", " ", "q", " ", 
         SubsuperscriptBox["c", "2", "2"]}], "4"]}], "\[Equal]", "0"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9231749145784235`*^9, 3.9231749271939125`*^9}, 
   3.9231954667399225`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"59565b8d-ed74-459e-8d5d-1970c3a233ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"\:89e3\:4ee3\:6570\:51b3\:5b9a\:65b9\:7a0b\:7ec4", "\:ff0c", 
    RowBox[{"\:5f97\:5230\:5173\:4e8e", " ", "c"}], ",", "a0", ",", "a1", ",",
     "b0", ",", "b1", ",", 
    RowBox[{"b2", " ", "\:7684\:8868\:8fbe\:5f0f"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"k", ",", "c"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\:6dfb\:52a0\:9644\:52a0\:7ea6\:675f\:6761\:4ef6", " ", 
      RowBox[{"AnyTrue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "a1", ",", "b1", ",", "c1", ",", "c2", ",", "d1", ",", "d2"}], "}"}],
         ",", 
        RowBox[{
         RowBox[{"#", "!=", "0"}], "&"}]}], "]"}]}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"solutions", " ", "=", " ", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"solutionsRaw", ",", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ContainsAll", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a0", "->", "0"}], ",", 
               RowBox[{"a1", "->", "0"}], ",", 
               RowBox[{"b1", "->", "0"}]}], "}"}]}], "]"}], "&"}], ")"}]}]}], 
       "]"}]}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"addConstraints", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"q", "!=", "0"}], ",", 
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["a", "1"], "==", "0"}], "&&", 
           RowBox[{
            SubscriptBox["b", "1"], "==", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["c", "1"], "==", "0"}], "&&", 
           RowBox[{
            SubscriptBox["c", "2"], "==", "0"}], "&&", 
           RowBox[{
            SubscriptBox["d", "1"], "==", "0"}], "&&", 
           RowBox[{
            SubscriptBox["d", "2"], "==", "0"}]}], ")"}]}], "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solutions", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"eqnList", ",", "addConstraints"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         SubscriptBox["a", "0"], ",", 
         SubscriptBox["a", "1"], ",", 
         SubscriptBox["b", "1"], ",", 
         SubscriptBox["c", "0"], ",", 
         SubscriptBox["c", "1"], ",", 
         SubscriptBox["c", "2"], ",", 
         SubscriptBox["d", "1"], ",", 
         SubscriptBox["d", "2"]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"solutions", "//", "Column"}]}]}]], "Input",
 CellChangeTimes->{
  3.9162784194191823`*^9, {3.9162784527146726`*^9, 3.916278505409766*^9}, {
   3.916363864074672*^9, 3.9163639095181856`*^9}, {3.916363941652711*^9, 
   3.9163639835203447`*^9}, {3.916364014464727*^9, 3.9163640146152163`*^9}, {
   3.9163645622485785`*^9, 3.916364563135023*^9}, {3.9163646119125175`*^9, 
   3.9163646140097575`*^9}, {3.9163647218186064`*^9, 3.91636472490425*^9}, {
   3.916365862684246*^9, 3.916365862873041*^9}, {3.916365948042535*^9, 
   3.9163659482025547`*^9}, 3.916368787611639*^9, {3.9168001700642395`*^9, 
   3.9168001860070515`*^9}, {3.9168002438169613`*^9, 3.916800274556398*^9}, {
   3.918197088909206*^9, 3.918197094661644*^9}, {3.9181974921462765`*^9, 
   3.9181974946616497`*^9}, 3.918197545603441*^9, 3.9197405413098564`*^9, {
   3.9219879033841605`*^9, 3.9219879078842645`*^9}, {3.9230174296230783`*^9, 
   3.9230174334296675`*^9}, {3.92317484541436*^9, 3.923174869733995*^9}, {
   3.923175036099216*^9, 3.923175045735027*^9}, {3.923175096114626*^9, 
   3.923175113944635*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"eda95fc7-d7a7-47d3-8af9-7c6bb1372d09"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", "c"}], "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", "c"}], "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", "c"}], "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "c"}], "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         RowBox[{"8", " ", 
          SuperscriptBox["c", "2"]}], 
         SuperscriptBox["q", "2"]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         SuperscriptBox["q", "2"]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"2", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"2", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"2", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"16", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"8", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"32", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"8", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"32", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"8", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"32", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"8", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"32", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"16", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         SuperscriptBox["q", "2"]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", "c"}], "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         RowBox[{"8", " ", 
          SuperscriptBox["c", "2"]}], 
         SuperscriptBox["q", "2"]]}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.9231750393143578`*^9, 3.9231750476043205`*^9}, 
   3.9231751002641945`*^9, 3.9231954707855453`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a51ee951-9d02-4113-9076-c9fc349a03ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"solNice", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"GatherBy", "[", 
      RowBox[{"solutions", ",", 
       RowBox[{
        RowBox[{"First", "[", "#", "]"}], "&"}]}], "]"}], ",", "1"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solNice", " ", "=", " ", 
    RowBox[{"solNice", "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", " ", ";;", "2"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "\:6309\:5076\:6570\:9009", ",", "\:51cf\:5c11\:89e3\:7684\:6570\:5217"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"solNice", "//", "Column"}]}], "Input",
 CellChangeTimes->{{3.923175105014496*^9, 3.9231751201746664`*^9}, 
   3.923175221264311*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"69d4ca2b-83da-4c8f-a2e8-fdf61ab9ff6a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"2", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"2", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         SuperscriptBox["q", "2"]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", "c"}], "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", "0"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", "c"}], "q"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{"2", " ", "c"}], "q"]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         RowBox[{"8", " ", 
          SuperscriptBox["c", "2"]}], 
         SuperscriptBox["q", "2"]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"8", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"32", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["c"]}], 
          RowBox[{"2", " ", 
           SqrtBox["q"]}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"8", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"32", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["c", 
          RowBox[{"4", " ", "q"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "\[Rule]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{
        SubscriptBox["b", "1"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"4", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "0"], "\[Rule]", 
        FractionBox["c", 
         RowBox[{"2", " ", "q"}]]}], ",", 
       RowBox[{
        SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["d", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["d", "2"], "\[Rule]", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         RowBox[{"16", " ", 
          SuperscriptBox["q", "2"]}]]}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.9231751221544857`*^9, 3.9231752234094963`*^9, 
  3.9231954776224003`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"79a606e2-7501-4678-a027-9a21aaafcc13"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.921987895224182*^9, {3.923175080084588*^9, 
   3.923175110444378*^9}},ExpressionUUID->"c9ac7d06-920f-4d7d-afa8-\
744c6020d963"],

Cell["c>0, q>0 , k<0", "Text",
 CellChangeTimes->{{3.9231752713040905`*^9, 3.9231752816240845`*^9}, {
  3.923195314875538*^9, 
  3.9231953188215027`*^9}},ExpressionUUID->"01561a3d-12ee-40fc-b5f5-\
0c95b119f18d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "\:7531\:8bba\:6587\:5148\:5b9a\:4e49\:89e3", " ", 
    "\:8981\:4f7f\:7528\:4e2d\:95f4\:53d8\:91cfz"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"\:7136\:540e\:6839\:636e\:6b63\:8d1f\:4ee3\:5165", ",", 
    RowBox[{"\:672c\:6b21\:662fc", ">", "0"}], ",", 
    RowBox[{"q", ">", "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "\[Rho]"}], "*", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "k"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "-", 
          SuperscriptBox["\[Tau]", "2"]}], ")"}]}], "-", 
       RowBox[{"\[Gamma]", 
        SqrtBox[
         RowBox[{"-", "k"}]], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", 
          SqrtBox[
           RowBox[{"-", "k"}]], 
          RowBox[{"(", 
           RowBox[{"z", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
    RowBox[{
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{"-", "k"}]], 
        RowBox[{"(", 
         RowBox[{"z", "+", 
          SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}], "+", "\[Tau]"}]], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"I", "*", "\[Rho]", "*", 
    SqrtBox[
     RowBox[{"-", "k"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"2", "\[Gamma]"}], 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", 
          SqrtBox[
           RowBox[{"-", "k"}]], 
          RowBox[{"(", 
           RowBox[{"z", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
        RowBox[{"I", "*", "\[Rho]", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", 
           SqrtBox[
            RowBox[{"-", "k"}]], 
           RowBox[{"(", 
            RowBox[{"z", "+", 
             SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}], " ", 
    "\[Rho]", "*", 
    SqrtBox["k"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"2", "\[Gamma]"}], 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", 
          SqrtBox["k"], 
          RowBox[{"(", 
           RowBox[{"z", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
        RowBox[{"\[Rho]", "*", 
         RowBox[{"Sinh", "[", 
          RowBox[{"2", 
           SqrtBox["k"], 
           RowBox[{"(", 
            RowBox[{"z", "+", 
             SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"exprPos", "=", " ", 
     RowBox[{"\[Rho]", "*", 
      SqrtBox["k"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", "\[Gamma]"}], 
         RowBox[{"\[Gamma]", "+", 
          RowBox[{"Cosh", "[", 
           RowBox[{"2", 
            SqrtBox["k"], 
            RowBox[{"(", 
             RowBox[{"z", "+", 
              SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
          RowBox[{"\[Rho]", "*", 
           RowBox[{"Sinh", "[", 
            RowBox[{"2", 
             SqrtBox["k"], 
             RowBox[{"(", 
              RowBox[{"z", "+", 
               SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}]}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"exprNeg", "=", 
     RowBox[{"I", "*", "\[Rho]", "*", 
      SqrtBox[
       RowBox[{"-", "k"}]], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", "\[Gamma]"}], 
         RowBox[{"\[Gamma]", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", 
            SqrtBox[
             RowBox[{"-", "k"}]], 
            RowBox[{"(", 
             RowBox[{"z", "+", 
              SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
          RowBox[{"I", "*", "\[Rho]", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", 
             SqrtBox[
              RowBox[{"-", "k"}]], 
             RowBox[{"(", 
              RowBox[{"z", "+", 
               SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"odeolList", "=", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"k", ">", "0"}], "/.", " ", "#"}], ",", 
            RowBox[{
             RowBox[{"c", ">", "0"}], "&&", 
             RowBox[{"q", "<", "0"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "z", "]"}], "->", "exprPos"}], "/.", " ", "#"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "z", "]"}], "->", "exprNeg"}], "/.", " ", 
           "#"}]}], "]"}], "&"}], ",", "\[IndentingNewLine]", "solNice"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.916450772074171*^9, 3.916450820533127*^9}, {
   3.9164509311393123`*^9, 3.916451018922263*^9}, {3.916452249479907*^9, 
   3.9164522847591047`*^9}, {3.9164524379984612`*^9, 
   3.9164524486558743`*^9}, {3.916452883887686*^9, 3.9164528990701447`*^9}, {
   3.916452954654726*^9, 3.9164529700232005`*^9}, {3.916454654222203*^9, 
   3.9164546649223843`*^9}, {3.9164547139085503`*^9, 
   3.9164547222102203`*^9}, {3.9164550993296556`*^9, 
   3.9164551259197054`*^9}, {3.9164551636852303`*^9, 
   3.9164551680977097`*^9}, {3.9164552140419497`*^9, 
   3.9164552344023523`*^9}, {3.91645640506688*^9, 3.9164564855555377`*^9}, {
   3.9164590696742735`*^9, 3.916459107108012*^9}, {3.9164591433245535`*^9, 
   3.916459143794879*^9}, {3.91680032008764*^9, 3.9168003214481573`*^9}, {
   3.916800407991815*^9, 3.9168004138366585`*^9}, {3.918192579752643*^9, 
   3.9181925821451397`*^9}, {3.9181962649653077`*^9, 3.918196277466668*^9}, {
   3.919740645429413*^9, 3.9197406456399536`*^9}, {3.919753484716836*^9, 
   3.919753584388878*^9}, 3.919753620671199*^9, {3.923175257704389*^9, 
   3.9231752581140575`*^9}, {3.923175327584319*^9, 3.923175327734461*^9}, {
   3.923175381184162*^9, 3.923175382604141*^9}, 3.9231755102639112`*^9, {
   3.923176193271456*^9, 3.9231762515332603`*^9}, {3.92317641218079*^9, 
   3.9231764468671064`*^9}, {3.9231774842236414`*^9, 3.923177524133619*^9}, {
   3.923195327502636*^9, 3.9231953278941*^9}, {3.923195373028284*^9, 
   3.9231954432222695`*^9}, {3.9231956338681383`*^9, 
   3.9231956573321724`*^9}, {3.9231957066721153`*^9, 
   3.9231958058376074`*^9}, {3.9231977737731123`*^9, 
   3.9231978519324837`*^9}, {3.923198432497065*^9, 3.923198435139833*^9}, {
   3.9231984819016743`*^9, 3.9231985091347914`*^9}, {3.923199577118806*^9, 
   3.923199603925042*^9}, {3.923200416093995*^9, 
   3.92320041647041*^9}},ExpressionUUID->"25768443-0f97-46eb-bd26-\
d3861dca0f81"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.916454345113053*^9, 
  3.9164543614396996`*^9}},ExpressionUUID->"3e175d65-0142-425f-b48e-\
abe52cdcf5b4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vNicer", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["c", "0"], " ", "+", 
           RowBox[{
            SubscriptBox["c", "1"], "*", 
            RowBox[{"P", "[", "z", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["c", "2"], "*", 
            RowBox[{
             RowBox[{"P", "[", "z", "]"}], "^", "2"}]}], "+", 
           RowBox[{
            SubscriptBox["d", "1"], "*", 
            RowBox[{
             RowBox[{"P", "[", "z", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}]}]}], "+", 
           RowBox[{
            SubscriptBox["d", "2"], "*", 
            RowBox[{
             RowBox[{"P", "[", "z", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"-", "2"}], ")"}]}]}]}], "/.", " ", "#1"}], "/.", " ", 
         "#2"}], "/.", " ", 
        RowBox[{"z", "->", 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"c", "*", "t"}]}], ")"}]}]}], ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"solNice", ",", "odeolList"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uNicer", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["a", "0"], " ", "+", 
           RowBox[{
            SubscriptBox["a", "1"], "*", 
            RowBox[{"P", "[", "z", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["b", "1"], "*", 
            RowBox[{
             RowBox[{"P", "[", "z", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}]}]}]}], "/.", " ", "#1"}], "/.", " ", 
         "#2"}], "/.", " ", 
        RowBox[{"z", "->", 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"c", "*", "t"}]}], ")"}]}]}], ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"solNice", " ", ",", "odeolList"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "/.", "solNice"}], ",", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["u", 
          RowBox[{"First", "[", "#2", "]"}]], "->", "#1"}], "&"}], ",", 
       "uNicer"}], "]"}], ",", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["v", 
           RowBox[{"First", "[", "#2", "]"}]], "->", "#1"}], "&"}], "//", 
        "TrigToExp"}], ",", "vNicer"}], "]"}]}], "}"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.9231753187738953`*^9, {3.923175349974308*^9, 3.9231753501342134`*^9}, {
   3.9231754379139442`*^9, 3.923175439443787*^9}, {3.923199525883155*^9, 
   3.9231995648131084`*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"d438360f-e4c4-474c-bc8c-4bf2a2a7884e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", 
      FractionBox["c", "q"]}], 
     RowBox[{
      SubscriptBox["u", "1"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]}]}], 
     RowBox[{
      SubscriptBox["v", "1"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"2", " ", "q"}]], "-", 
       FractionBox[
        RowBox[{"c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], 
        RowBox[{"2", " ", "q"}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", "q"]}], 
     RowBox[{
      SubscriptBox["u", "2"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]}]}], 
     RowBox[{
      SubscriptBox["v", "2"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"2", " ", "q"}]], "-", 
       FractionBox[
        RowBox[{"c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], 
        RowBox[{"2", " ", "q"}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", "q"]}], 
     RowBox[{
      SubscriptBox["u", "3"], "\[Rule]", 
      RowBox[{
       SqrtBox[
        RowBox[{"-", 
         FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", " ", "\[Gamma]"}], 
          RowBox[{"\[Gamma]", "+", 
           RowBox[{"Cosh", "[", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"-", 
               FractionBox["c", "q"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
               SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
        ")"}]}]}], 
     RowBox[{
      SubscriptBox["v", "3"], "\[Rule]", 
      RowBox[{
       FractionBox["c", "q"], "-", 
       FractionBox[
        RowBox[{"c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], "q"]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", "q"]}], 
     RowBox[{
      SubscriptBox["u", "4"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], "-", 
       FractionBox["c", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "\[Gamma]"}], 
            RowBox[{"\[Gamma]", "+", 
             RowBox[{"Cosh", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
          ")"}]}]]}]}], 
     RowBox[{
      SubscriptBox["v", "4"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"2", " ", "q"}]], "-", 
       FractionBox["c", 
        RowBox[{"2", " ", "q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", "q"]}], 
     RowBox[{
      SubscriptBox["u", "5"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["c", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
           ")"}]}]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]}]}], 
     RowBox[{
      SubscriptBox["v", "5"], "\[Rule]", 
      RowBox[{
       FractionBox["c", "q"], "-", 
       FractionBox["c", 
        RowBox[{"2", " ", "q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]], "-", 
       FractionBox[
        RowBox[{"c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], 
        RowBox[{"2", " ", "q"}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", "q"]}], 
     RowBox[{
      SubscriptBox["u", "6"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], "+", 
       FractionBox["c", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "\[Gamma]"}], 
            RowBox[{"\[Gamma]", "+", 
             RowBox[{"Cosh", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
          ")"}]}]]}]}], 
     RowBox[{
      SubscriptBox["v", "6"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"2", " ", "q"}]], "-", 
       FractionBox["c", 
        RowBox[{"2", " ", "q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", "q"]}], 
     RowBox[{
      SubscriptBox["u", "7"], "\[Rule]", 
      FractionBox["c", 
       RowBox[{
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]]}], 
     RowBox[{
      SubscriptBox["v", "7"], "\[Rule]", 
      RowBox[{
       FractionBox["c", "q"], "-", 
       FractionBox["c", 
        RowBox[{"q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "c"}], "q"]}], 
     RowBox[{
      SubscriptBox["u", "8"], "\[Rule]", 
      RowBox[{
       SqrtBox[
        RowBox[{"-", 
         FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", " ", "\[Gamma]"}], 
          RowBox[{"\[Gamma]", "+", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", 
             SqrtBox[
              RowBox[{"-", 
               FractionBox["c", "q"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
               SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"4", " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
        ")"}]}]}], 
     RowBox[{
      SubscriptBox["v", "8"], "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "c"}], "q"], "-", 
       FractionBox[
        RowBox[{"2", " ", "c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"4", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"4", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], "q"]}]}]},
    {
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "c"}], "q"]}], 
     RowBox[{
      SubscriptBox["u", "9"], "\[Rule]", 
      FractionBox["c", 
       RowBox[{
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{"4", " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"4", " ", 
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]]}], 
     RowBox[{
      SubscriptBox["v", "9"], "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "c"}], "q"], "-", 
       FractionBox[
        RowBox[{"2", " ", "c"}], 
        RowBox[{"q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"4", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"4", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", 
       RowBox[{"4", " ", "q"}]]}], 
     RowBox[{
      SubscriptBox["u", "10"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], "-", 
       FractionBox["c", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "\[Gamma]"}], 
            RowBox[{"\[Gamma]", "+", 
             RowBox[{"Cosh", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
          ")"}]}]], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]}]}], 
     RowBox[{
      SubscriptBox["v", "10"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"4", " ", "q"}]], "-", 
       FractionBox["c", 
        RowBox[{"8", " ", "q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]], "-", 
       FractionBox[
        RowBox[{"c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], 
        RowBox[{"8", " ", "q"}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", 
       RowBox[{"4", " ", "q"}]]}], 
     RowBox[{
      SubscriptBox["u", "11"], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["c"]}], 
         RowBox[{"2", " ", 
          SqrtBox["q"]}]]}], "+", 
       FractionBox["c", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "\[Gamma]"}], 
            RowBox[{"\[Gamma]", "+", 
             RowBox[{"Cosh", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
          ")"}]}]], "-", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]}]}], 
     RowBox[{
      SubscriptBox["v", "11"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"4", " ", "q"}]], "-", 
       FractionBox["c", 
        RowBox[{"8", " ", "q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]], "-", 
       FractionBox[
        RowBox[{"c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], 
        RowBox[{"8", " ", "q"}]]}]}]},
    {
     RowBox[{"-", 
      FractionBox["c", 
       RowBox[{"4", " ", "q"}]]}], 
     RowBox[{
      SubscriptBox["u", "12"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", "q", " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "\[Gamma]"}], 
            RowBox[{"\[Gamma]", "+", 
             RowBox[{"Cosh", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
          ")"}]}]], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "\[Gamma]"}], 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"-", 
                FractionBox["c", "q"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"-", 
                 FractionBox["c", "q"]}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                 SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], 
         ")"}]}]}]}], 
     RowBox[{
      SubscriptBox["v", "12"], "\[Rule]", 
      RowBox[{
       FractionBox["c", 
        RowBox[{"2", " ", "q"}]], "-", 
       FractionBox["c", 
        RowBox[{"4", " ", "q", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}]], "-", 
       FractionBox[
        RowBox[{"c", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "\[Gamma]"}], 
             RowBox[{"\[Gamma]", "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox["c", "q"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                  SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox["c", "q"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
                   SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}],
           "2"]}], 
        RowBox[{"4", " ", "q"}]]}]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.923175351568941*^9, 3.923175386674011*^9, 
  3.9231754404239187`*^9, 3.923176259005522*^9, 3.9231764544943247`*^9, 
  3.923177529754366*^9, 3.923195450432469*^9, 3.9231954841647844`*^9, 
  3.9231958157221327`*^9, 3.9231978660309043`*^9, 3.9231985142695045`*^9, 
  3.9231995432856307`*^9, 3.9231996069585423`*^9},
 CellLabel->
  "Out[763]=",ExpressionUUID->"d7936231-bbb3-4fdc-b0cc-5841fa1501f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"paraC", "=", "1"}], ";", 
  RowBox[{"paraQ", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paraX0", " ", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"paraR", " ", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paraT", " ", "=", " ", "4"}], ";", 
  RowBox[{"paraG", " ", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setting1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ClippingStyle", "->", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ColorFunction", "->", " ", "\"\<TemperatureMap\>\""}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"PlotPoints", "->", "60"}]}], 
      RowBox[{"(*", " ", 
       RowBox[{"60", "\:5f88\:987a\:6ed1"}], "*)"}], "*)"}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SqrtBox[
       RowBox[{"-", 
        FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", " ", "\[Gamma]"}], 
         RowBox[{"\[Gamma]", "+", 
          RowBox[{"Cosh", "[", 
           RowBox[{"4", " ", 
            SqrtBox[
             RowBox[{"-", 
              FractionBox["c", "q"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
              SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"Sinh", "[", 
            RowBox[{"4", " ", 
             SqrtBox[
              RowBox[{"-", 
               FractionBox["c", "q"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
               SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"q", "->", "paraQ"}], ",", 
       RowBox[{"c", "->", "paraC"}], ",", 
       RowBox[{
        SubscriptBox["\[Xi]", "0"], "->", "paraX0"}], ",", 
       RowBox[{"\[Rho]", "->", "paraR"}], ",", 
       RowBox[{"\[Gamma]", "->", "paraG"}], ",", 
       RowBox[{"\[Tau]", "->", "paraT"}]}], "}"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "c"}], "q"], "-", 
    FractionBox[
     RowBox[{"2", " ", "c", " ", 
      SuperscriptBox[
       RowBox[{"Coth", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x"}], ")"}]}], "]"}], 
       "2"]}], "q"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "t"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"Evaluate", "[", "setting1", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "5"}], "}"}]}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<t\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(u\), \(13\)]\)\>\"", ",", "\"\< \>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"x", ",", "z"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "->", " ", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "100"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.9231754935739474`*^9, {3.9231755253438835`*^9, 3.923175550623523*^9}, {
   3.923175597023614*^9, 3.923175640893777*^9}, 3.923175684103295*^9, {
   3.923175731708522*^9, 3.923175803543002*^9}, {3.923175849083253*^9, 
   3.9231758934332037`*^9}, {3.923175924147855*^9, 3.923175924583033*^9}, 
   3.923176267742815*^9, {3.923176476984001*^9, 3.9231765276688504`*^9}, {
   3.9231769291355944`*^9, 3.9231769327136197`*^9}, {3.9231769825998745`*^9, 
   3.923177182011213*^9}, {3.923177551163342*^9, 3.9231776207533903`*^9}, {
   3.9231777677127657`*^9, 3.9231778097146573`*^9}, {3.923177882062771*^9, 
   3.923177907482704*^9}, {3.9231779542227783`*^9, 3.923177978202735*^9}, 
   3.92317803819263*^9, {3.923195497982785*^9, 3.923195540794689*^9}, {
   3.9231955727973146`*^9, 3.9231955896122074`*^9}, {3.92319584235247*^9, 
   3.923196039621459*^9}, {3.92319615543114*^9, 3.9231962203304167`*^9}, {
   3.923196371270894*^9, 3.923196514055395*^9}, {3.923197882485975*^9, 
   3.9231979918476496`*^9}, {3.9231980390279293`*^9, 
   3.9231980924971085`*^9}, {3.92319813825714*^9, 3.92319816325486*^9}, {
   3.9231982138790817`*^9, 3.923198257791856*^9}, 3.9231983412919383`*^9, {
   3.9231983870732765`*^9, 3.9231983914196386`*^9}, {3.923198518591134*^9, 
   3.9231985546066866`*^9}, {3.923198588088513*^9, 3.923198613507793*^9}, {
   3.923198666786798*^9, 3.9231986677741175`*^9}, {3.923198702770405*^9, 
   3.923198738506059*^9}, {3.9231988033757825`*^9, 3.9231988901102*^9}, {
   3.9231989874056234`*^9, 3.923199072405438*^9}, {3.9231991271891403`*^9, 
   3.9231991317072115`*^9}, {3.923199195439827*^9, 3.923199355435032*^9}, {
   3.9231997964584665`*^9, 3.9231997981837387`*^9}, {3.923199880625015*^9, 
   3.923199926527459*^9}, 3.923200059963684*^9, {3.9232001560632734`*^9, 
   3.923200166589608*^9}, {3.923200271603226*^9, 3.9232003014244866`*^9}, {
   3.9232003456028132`*^9, 3.9232003521716022`*^9}, {3.9232004656785865`*^9, 
   3.9232004806324587`*^9}, {3.9232005174635353`*^9, 
   3.9232005516524777`*^9}, {3.9232006699223285`*^9, 3.923200694982792*^9}, {
   3.923200799672245*^9, 3.923200928303012*^9}, {3.923200969280859*^9, 
   3.9232012303455343`*^9}, {3.9232012954760838`*^9, 3.923201308338952*^9}, 
   3.9232013391709127`*^9, {3.9232014873138885`*^9, 3.923201500696878*^9}, {
   3.9232016129432364`*^9, 3.92320162431359*^9}, {3.9232020726123676`*^9, 
   3.9232021658340673`*^9}, 3.923202251828746*^9, {3.9232024278584595`*^9, 
   3.9232024699801583`*^9}},
 CellLabel->
  "In[1399]:=",ExpressionUUID->"95b60335-6fea-4622-9f0d-363dca92a17a"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
8WqjNzQcd8SEzn9UY/xbkfuWcU9MBG/6LgPam4K+Y9WL9Ac/QN+LeUXxFfhp
+g5LM4qvwDvRd1jGU32x+Qh9T2ozxV3gx+j7vKH0vjf4SfpO8W96Fx28gL7v
gPdREQfqNz873G13Lvt+HPiDe66mHimGbHwxldyTwvgCvk/yfSLEY7YXrTK8
Xfk6HvpXTIM/6bt+J7DvCYKrpZ2dl2FewL5HA27RJ3J98VUDYSS1H/CqzRum
zgrl34nAOFj2o8Gw9os02fuT4LN6T13hVtdIyH2TMMfFT8bX/Ur3pZ3V4d8x
x7i5qUbmk7A3/Ptl4P7be868b8u/ww6+OrHyOw74XfB1z6wbmnTUZ++rg1er
o9dg7hheLxinOi0eMmbGLHPhJb1LjP47hr6ftYnaIXgsfe8Pv4t8mh0YYfrk
qyb7XfB+ceMVAWf5d46Qz3r6ngj0B8d3uDDfBJ9L3wHBfBP8AX2HDvNNcHx/
BL8L/6Axxfd4RKAFyx+83cyhI7YuLmPzd/CM7CpTJ1Q3ZnEyeFH4+dm9x/N3
R9F/+7/P6S5c12D+DXwpnfsKw7kg4m/o3hDWmdGPfr7ceqTvZQtW75hvbonr
PC3NwZz9Lrh/uo7dppZGTH82/w3+bdC3RQ77fgr4f45xukV3+e+Cj7irvuTg
ETPhLc0rfSX3ayZSP/WV3K9Ro/gHPCvprFK8boB+5GCeHZu8gfcj1g79Tvjv
UBix8oLXiA+L7VI7j9UL+ORL47ss3s7nL/jdSRbPHkSt1mL5wG/EOZh+7n2R
1xfseTD3XVDLz9yfoJ/2Mur0avDSfPZ9N3DXTzZ5idd4udC/xtC8AO0Zdi7z
r3+j1UIdZifaZ/CR9teH3eC/i/aw17OH/1RP0XeaiFeNyN7tFcDTMz+/eJ9n
szumAsZ9lPcPnbcfTPEDypt+K7Lzq/A/chNKDz43ev6x+Se1BTnF7eDda46w
bWmpLxRT3A6O+9F3JP5nA/kfc8ofOhQWjDXSaGoovMZ9JeJRxyvv4/SkcRm8
ZMCr9eZftYWTNP6y9Wq6pzCdvvMCPbPou4ceEp5MHOsM4D9HfbHsNd1YaCXh
icQx7qO/f6Rz/sE0HwGPd/TxujvESMgnPw/9A1+0apV5K1GO+BDc9WVxk+PN
k+X+jms3+9lqMY57TIjrwHGv5Dqlh/4f6By4ouJcLB+/Gup90n16yZCtRyF+
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
idKDT1TGt0oWlZetq5Ro9vqrD96BQb975fH6oNkwU5Y/+CenjJY+ou+qgNed
PW/6a1H+4AGHhz4Uf1eFrbt2G1HRf8Ml5xZ06V1Z/C74g9TAjFDR9yLBm7r3
n7Zd9LvgK683DMoU/S74gmlZ3cXfQwH/vcwp/K89ePcG/X1k8dS4iDH8nUnU
1z6PnzWHF3P72fl5yTwCOh+l8+rsnX/irWssaRxvZsDfE5O8AzxGcp6kLZ0n
gT3wh/P9zIZYWRgz/yk9p430GPe96HvNsB/csE/le6SNJPtoF2gfDf1Ret85
8h/nUcf/4zwq+x4EjeOefzq5f3ypz8qL9MfOr+/U2UTJ3l0HX0b3T8Ml5xUb
0/vhyB/+rXi9doLsdRbjbP220W6nXLti9h4ai6PoexOwB/Xr3+b6PosP/HsW
qK9N6y41c3OyYPUIOyfSeZhwyXy5jL6Dg9+Fzovo3d1wyTnkcDqHjPzRHmbR
+6543wnj3RqruYNuGhewdwLxu89pX36tZN1mO63beEvuceTR92jA8bs+9O7i
Wsn65AVan2Tf5aFyWdA7lmMk+5iGtI/pLTlfsZ3OV4T/Y38N7UH67gH0Ad94
xUv7cTJvn2w9dtiI2QvzeT7Se9/sXVDKx5He34OdGKeiToz9fln0niH0H6M2
oNbSBTwftKsg+n46flf67gHsB191KS7I5j23H+0hNOXmiqqi9+Wk9/f/tY4B
/cFvFV54MUiUj/QdjJb/2F9g78LhfY+H2m6RGf9e54f98Bszd/VXa1+e//8B
uVf62Q==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
eZ8zbWbUQ/+nBw1HfzMtxrNXYpxzdL1Y/9CEl+HNEvvd/axnTFHdz+yF7H9y
Dz4z8FHHCL6i/4sm9jHAnrlYvCN8F/Vl3Xoe5IMGPiSF/Rf6iYY8nFlWw0/h
p8L+JvNC54TMgNxxR8hxbwsuldoXEN7y18LXf1H7Wbq/WWJbDD4J4C/p2tKp
/feQ/eFb6JNxjIpvMV1t7oz5b7I9qq+f6/Y5wXYJfcAmh17psOAT0J/AO0Ij
4BHgGzg/66XpJbL8c0Fv4RHQ+a0Z9Hn53PQdG9/fheeecxZ+c614FrQZGr1+
fHPORb4713k2ehv4oDYxBvC2/69+nRjny4FvFOdD6xgDOm7qZhTmT/n2fPcZ
MU70j69G/SZBO6Gt0E9sCvglQlvh6TaIes4x7CjweujH0Yuj9+PMh49Bx43/
Fff2yEyX6QMeD9qPzQaby8x4F8b/dWJ7A7YGdBWbJ+aF0PUzLnSM/8SZCx8L
f4S9AV4Y/gk+CJ3GmYVtOJ1Kn2OcbeiL0bOjn54d+g/OIc6dV2L+mRN0LdA1
aMj5IY9/XpjGQKeQMecHDj3B7wlaBh37NXDsbeiHoGXQsTc0hws4g1LrTqBN
0KU/A0eW/z3ao2eiDbYK6B4yK7IrMntaGg4ofC90baEupFOMh0Nq+6jn3s5x
HqGX2C6xHgG9B332i/3J/hhS2D6Ffxt2L86xLtEG+yf+Q9hAV0/tP4qPWVZ6
L/+a+zrt0LMNi3tog2/drkFX2X/QRPyILgvZ9s/C9V1jb6LP49xqWbPMgT8Z
z2BP7xH7Glm82//D94ix8czuMYZX0YfWfM4iH+8ZY6D97tGGs5f6EUEjoY/w
COvG3kcf2i7mBJ4PWgJNQQ5CPkXvxnmG3hc7GmvuLT2vV2J9LOcMulzOdfgK
9HHwCcji+yaWo5GPkbvhDdBdo1uGJwfyHz02+uy+UU8/yPD6Nc0TY2Cu4AfQ
R8MDo39lDNhq4Rng15FplolnvRv9wzvgUzo12nAOrpnaJ3DJmv0CwdEjrBTv
snrNdip4Yvbh6Hh35gcd96BYP6cFjo0TPvqIxHznx3Eve7YsbWtDLn69tM3t
4Mp7dEjQHGjEwNin8HDwcvDM6ADQBaBXfCBweB5knUOS/8lq4Mg+2Fegc88X
5hmPDNrVIfpnbJyZyD+cm8hSyFfYJj9OvWafTr1WOUua/HjU5wmJdVnfJx4z
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
P9C3wblzZLEf38kdk8teGC+8a837hfhTZBt8Icfmzmtxo9qckzvWnu87P3cM
L7zNgNy5g6DD7+aOWWbNH5E7RxB7+cjc5yb0dlDu3Fzs9z0azqG0Oz7OuWP2
WWOf5I4HZ33Oyp13gn36Sm6+hX1KTPTJ8Jil4yXwBSNGmjgLdPjo8k/InbMI
en5a7jh01tho4R1qXp/EVWE/xuf3+Nx5k6Cx/XLnlYImv5D7bGUfHZs7RxM0
+Y/ceTngu/7MHfsMP/ZX7rwc8G/E8OInOR29a+68Upxrh+bOc8V5RJ4N5IPx
glNyzwn5Hs7U/4tVP1bwuNy5mKC9T0CDhLcX/kju3DUbCH8sd06bDQvHjuJv
1OSDWTqfxL+l8yzhI4SP0o0qR9R81tyQO7cA59plwg+o+fwalzuvAvRzYu48
IezNi3PnYIEO/55bDoIvfUrj3gF+oOFcN+h98Nu6Cl6hZlp6Te78KtCxa3Pn
XYGOLSidB+F2eMbcOVugh/flzu8Bz3B/7hwU0Lq7hB9SM19xT+58FOzrB3Pn
2YDWEXOLXxL7+ufSOciuE7w0d34wzm5yHcBfnc74c+fZYP6n5s6xtoXaPJ07
P9uWrP/SuRJu4r7c78sZelHu3Cm3CJ/e8PtuBs3NnXeIs+yh3PmF1hc+LXde
oI7Cp+fO27Ot8OeFnyl8G+HP5M4dt5Xwu2NtwNtMyp1LB/6EOEf8t58VvDd3
DiLOyjG5czhAnyfnzse1nvAzcvO910Pnc+exuQEanztn3dZq83Du3Cmcg8/l
zmvXQfWjcueCgJ4T04ZdE5vmqbnzQkDbd83MnzflJsmt/yZvz9mVed+H1edZ
lXll5hx+fkDwx6NK5604jbWROjca8i36NvRu2CXxZ0Nv3jvkAe6Dj55AorPM
MhM6Gvhq6tGX9w9Z9PSGaeZ60DfVnZU6BgydyVmhQ+CZ5IaYU3N+qfNDL4Ee
lxxk6HLR2TMG4j84E9Ddo7cn9hs9fffSfvO8O/nPyL9wec1juzN0iOgPjy3s
O3l4ad750uCf7wxZoK2uH5eatz462hwbvP3mueMHyWM3NOaqU836Hs4d7P2n
a07mN0wnz0gtryKfoPc/MrWOmrxn4MQDostgLw/LrFMhHxr6moNTx9X0j7Ey
ZvxCyUGAngxeiLgQ4kOwvzKGs+PsG6sxrKkxvqk2p1Ue93HxPq1qxondwZeU
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
D1278oM=
            "]], Polygon3DBox[CompressedData["
1:eJwtnAn8VsP3x+/zPPc+M98kW2UrWqxRQotEWmhDlgglkqWNVi0kCWVNkp2E
bJHs+1aW7BGJska2yP5D2f6f9/8zr1fz+s6ZM3fuvXNnzpzz+ZynxgNHHD68
nGXZ1nmW6V92cZFlO5ayrIkan1f9DDXOlHysyn+qn1XNsjbq94jqO9dk2VPq
U1d9D1N5W/WOKh9J/5j6X6v6ySHLSqoPUf0o9W+l6w6Rfnv1f1FtjVQ+kbyV
5GdVn6rx95f8nPrtov4X6voDdP1c6WokT5K+rfSPSt8MveRukp+X3ELyBZK7
Sl4kubnkxjHL5mjsb3T9aMnTpD9A+oXS7yp5auH3K6vPvaqPU9mw5Hd6WvVB
un9Z8lDVj1b/f/R3mK6/TPp/VW+sskpyI8mLVN9W97tB9RZqG6973aO2v3X9
bZIHqn6Vyn2S66nPM6rX0XNsJ91NlSzro/6Zyirp9lafW6R/VOPNkLxa9TG8
L/eUblu1LWR+Ve7QZeer7WzVX1JpKd0vattR9f9pvAuke5K+uv4d/T1S+o3U
djXPpvdrKvkF1U+Tvlvhb7OH9D1UX6vrX9JYm6l+kPR76+/yzO/A9Vvo+RpJ
vl3vMUr6HSVfruu/lO50yX/p+mXSN5TcW/J6ye9KbiD5cL6P5PZ6931Umqj+
m8pC1o/0p0q/s55vpOSDNP6/GvsztV+s8Veo7VPV66vtOdUnq36S+rfT302k
H63nO131PzTe29Jvqfoh0n+ov5PKnjO+98+F5+IR5qzwmIz9uOTfVG+u8TeR
fL3uP07X/6nxlrJepTtU8meSH5VcI7mr5M8lPy55A8ndJa+S/JjkWpK7SV4n
+R32m+TDJF+v8R9O92b8idK3lv5h3W8nyT/r/etI/6b0vSRPl/4Syd+m9fy9
5BfVf1PJB0r+T38/k/47tS1XvYv052puK3rHzqr/oLJYurrSHaz+bQuPP0r6
Mao/pLKB5OGSR6s+SiWW3Paw6uek/bFZ2WvqSI13tsa/VGMeofouartQ9Tt4
hsLrlvX7g9q+UH0rve8Zqn+Zez3/rvfbVPpP0vceq7+vZ/6Gj/KO6j9B47fV
PdtEv88UyQ+rT5B+vq6/QrofVe+h67+T/gWul9yT76G/l2qsL9S2qrCNwdZs
rWuu41uzryRfI31/1fvq+ls0/vWSR+a2gdhC9vhFql9T2LZtrz61pL9V8r4l
7zn23hW6vrf6virdbrr/W6w76caW/D5/qbwnubXkg1S/Ws8/mPWXvu+Vuu5M
yRNUtlDbbiq/qH6UyvGqz9b4AzX+u+rXSv1v1PUTpTtDuoGSl+m5fpb8F31U
3y7YXvVU/3MZX9cfKfl1ybtLPotvqv6D1ben6kvZp+xf9bkE+6HyvORPJXdW
fZauP0L113R9S76f2l6QvoPanlbbVdL3Uf0N1feQ/iP97aTSWWVvybexJnS/
Dip91Ha1+h+l/m+qvmeNbQ62Z6nGXMfaU/skyfVV9mU/qyyR7mtd0131N1jj
kk+S/n7VB6scr3pF77Ohxv5J8gPS15I8TPXdVX6X/miVAarvqfIv9XRGDVc5
RfVauuYB1Ztq/oboXj30HP9o/e2oMTuxPlQOZ2/l7s8eYz3eqrZB6v+B2tvp
fZrwfXlWyX/r+h+lf1JyffXdTvqbJZ/MXpW+LfZF7W/p3seqbanabpH+FNXf
V30v6V+Tfj/p++med6u+vvBcHac+HdXnJvU/UfVlqrdW/0ty7+Ueer6NWO/6
25X5UNt81eeo/0nq/576tVH/V9RnL2yf2nbGRql04v1UFvNtOPdL3lMv5z43
OD/wGW4ofJ4/xVmkMlH1HdWno8Z6Oen5Zny71yXPVr295mQ/1jffTfffVX+/
k3yoSj/VR+r5dlT/uzXOjqwntU3W/R7K/H1OVPtFma+5S/II9d9B8jy178D+
KHwvnplnX6Hv8aHqN6t9iPTb6O8H6l9Pba2ZC5XNOY/Vd/sa+w34D02l34G2
wte3V+lVeN+x/85SOZO5YH+rPp05U/0+lUrZa2R4ms89sY0qFd3r1MK2mT6s
353xf/RdrlY5RverrdIk85xir/py/kn+VvKdqq9Uv4N0bY3khaoPCR6PcY/R
87+qv+2kPzj13176U3X9gRq3f419EnyT39N6WsI5pf6nlmzvo77PEMkfqH6c
+r+s57tM/X9iX0teLv3duu969R8muZD+R/Xvkb7HftHv2p09H32Oc57vL7l3
Yf9pEXOrsn9hP3T3zG3Xsxb0vFVd/6DavtHYHTXG95J/lXysdKdhQzLbyHmF
vxHfCpuFPdqW74XtVltXXV9W+bbsNcPa6RS9vktqH19jf4DzGB8HX+c5nkny
bqw39Z+icj++Q9lnzkjOFM4bzUHdqs8H/KEdJG/FvVS6q74756TGP1f3mym5
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
            "]], Polygon3DBox[CompressedData["
1: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
Fdj/ANYGuDY=
            "]], 
           Polygon3DBox[{{1975, 957, 943, 1366, 1423, 1976}, {2234, 1271, 
            1135, 1134, 1599, 2166}}]},
          Annotation[#, "Charting`Private`Tag$129950#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl08lvzVEchvGv26qaakiQWKBiy8ZKUn8BCyRIiCHEQiUsxNSwqRgWdm6r
FZFIqoZQ40JpSVCt4erV2wqhYqqhqC5ESBrxOST3yfO+55zfOb97bm75ui1L
Ng+LiHaUCSk3ZyImCMt4bUnEeGO18iZ5unxU3iHPkY/J83lGacRxeaG8QV5a
FLFSnisXjDdaX6m/Mf4eb/Edp9CHd6iztok/4BM+4jQuoBW15j/zTTTgDr5h
lb3v8iX0o966i/wFbbiMexhAO7pRwBl8RQeu4D6uogdn8dQ+a+x9Xb6FQTTi
JHJ4haw1vfwY15DHM3SiGTXmu/g5zqEF5/ECL3Ebq53xmqvd0wN3tNXdP+Rt
wyHvM/5IX5TuXc/JeXOL9V36AT5c7B2Mr7dPlbGs3qnXcD79fvyEj3AX13GB
67mbq+y323Pz0vfXZ/JBfci7deiDfIP7uIl7+QT3cJZzvJ/beCe3pPXYKDfw
inQWL+BDXMHVPJu387TkERFTnDnL2eP0qbxHL/WOZXoJj+ViHsMZHh1pIGIU
/bF+JA+xa4/f/Au2jZ/smPjBvmrsLfr3WFQok5yhxmT3OFFezj7RmuYy//8X
fwFZFXOi
        "],
        VertexColors->None], 
       Line3DBox[{359, 188, 1946, 368, 640, 201, 587, 367, 991, 961, 986, 960,
         955, 939, 982, 983, 977, 2195, 949, 971, 972, 951, 970, 2199, 950, 
        1941, 359},
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1632, 1981, 2157, 1982, 1907, 2092, 2158, 2202, 2422, 2093, 
        1983, 1984, 1908, 1965, 2395, 1789, 2146, 2094, 2095, 1955, 2426, 
        2134, 1790, 2133, 2132, 2184, 1791, 1633, 2263, 1792, 1634, 2264, 
        1793, 1635, 2265, 2203, 2341, 1636, 2266, 1794, 1637, 2267, 1795, 
        1638, 2268, 1796, 1639, 2269, 1797, 1640, 2270, 1798, 1641, 2271, 
        1799, 1642, 2396, 1909, 1800, 1910},
        VertexColors->None], 
       Line3DBox[{1643, 663, 702, 650, 2417, 2072, 665, 704, 404, 537, 438, 
        1911, 2433, 883, 2160, 2159, 2272, 1801, 1644, 2273, 1802, 1645, 2274,
         1803, 1646, 2275, 2204, 2342, 1647, 2205, 2343, 1648, 2276, 1804, 
        1649, 2277, 1805, 1650, 2278, 1806, 1651, 2279, 1807, 1652, 2280, 
        1808, 1653, 2281, 1809, 1654},
        VertexColors->None], 
       Line3DBox[{1655, 2079, 1874, 1913, 1966, 1414, 1912, 1985, 1875, 2042, 
        1967, 2388, 1968, 1914, 1986, 1876, 2043, 1415, 1969, 1950, 1915, 
        1956, 1810, 1656, 2444, 2189, 2190, 1811, 1657, 2282, 1812, 1658, 
        2283, 2206, 2344, 1659, 2207, 2345, 1660, 2208, 2346, 1661, 2284, 
        1813, 1662, 2285, 1814, 1663, 2286, 1815, 1664, 2287, 1816, 1665, 
        2288, 1817, 1666},
        VertexColors->None], 
       Line3DBox[{668, 223, 1346, 290, 224, 1347, 292, 225, 1348, 294, 226, 
        885, 1595, 884, 1667, 2289, 1818, 1668, 2290, 2209, 2347, 1669, 2210, 
        2348, 1670, 2211, 2349, 1671, 2212, 2350, 1672, 2291, 1819, 1673, 
        2292, 1820, 1674, 2293, 1821, 1675, 2294, 1822, 1676},
        VertexColors->None], 
       Line3DBox[{1689, 1825, 2298, 1688, 1824, 2297, 1687, 1823, 2296, 1686, 
        2355, 2217, 1685, 2354, 2216, 1684, 2353, 2215, 1683, 2352, 2214, 
        1682, 2351, 2213, 2295, 1681, 2180, 2179, 2440, 1680, 2135, 2172, 
        2439, 2260, 2173, 1679, 2147, 1883, 2148, 1882, 1990, 2055, 1989, 
        2251, 2413, 2044, 1881, 1988, 1678, 1987, 2407, 1880, 2098, 1879, 
        2082, 1677, 2418, 2081, 1878, 2097, 1877, 2144, 2096, 2080},
        VertexColors->None], 
       Line3DBox[{1700, 1827, 2301, 1699, 1826, 2300, 1698, 2361, 2223, 1697, 
        2360, 2222, 1696, 2359, 2221, 1695, 2358, 2220, 1694, 2357, 2219, 
        1693, 2356, 2218, 2299, 1692, 2137, 2181, 916, 1691, 876, 2153, 2432, 
        872, 1690, 463, 551, 462, 614, 549, 1559, 795, 613, 808, 460, 717, 
        612, 807, 1563, 459, 855, 854, 2149},
        VertexColors->None], 
       Line3DBox[{1702, 2100, 2161, 2101, 1919, 2102, 2162, 2434, 1828, 2103, 
        1995, 1996, 1920, 2104, 2397, 1829, 2105, 2000, 2150, 2001, 1921, 
        2258, 2398, 2056, 1830, 1959, 2006, 2007, 1922, 1970, 1831, 2045, 
        2009, 2409, 2256, 1923, 2165, 1832, 2164, 2261, 2302, 1833, 1708, 
        2303, 2304, 1834, 1710, 2305, 1835, 1712, 2306, 1836, 1714, 2307, 
        1837, 1716, 2308, 1838, 1718, 2309, 1839, 1720, 2310, 1840, 1722, 
        2312, 1842, 1724},
        VertexColors->None], 
       Line3DBox[{1723, 1841, 2311, 1721, 2368, 2229, 1719, 2367, 2228, 1717, 
        2366, 2227, 1715, 2365, 2226, 1713, 2364, 2225, 1711, 2363, 2224, 
        1709, 2362, 1244, 1707, 2163, 2185, 2187, 2443, 2186, 1706, 2176, 
        2177, 1958, 1439, 2008, 1705, 2004, 2005, 1917, 2003, 2002, 1704, 
        1999, 1438, 1957, 1998, 1997, 1703, 1993, 2408, 1994, 1916, 1992, 
        1991, 1701, 1564, 2136, 2129, 2073, 1918, 2099},
        VertexColors->None], 
       Line3DBox[{1733, 1853, 2320, 1732, 1852, 2319, 1731, 1851, 2318, 1730, 
        1850, 2317, 1729, 1849, 2316, 1728, 1848, 2315, 1727, 1255, 1726, 
        2441, 2231, 2183, 2182, 2442, 1725, 1847, 2083, 2314, 2255, 1953, 
        1846, 1974, 1928, 2313, 2015, 2014, 2048, 1845, 1973, 1927, 2013, 
        2012, 2046, 1844, 1972, 2406, 1952, 2011, 2010, 1960, 1843, 2403, 
        1971, 1951, 2128, 2127, 2074, 2419, 2230, 2075, 1924, 2194, 2200},
        VertexColors->None], 
       Line3DBox[{1741, 1859, 2326, 1740, 1858, 2325, 1739, 1857, 2324, 1738, 
        1856, 2323, 1737, 1855, 2322, 1736, 1854, 2321, 1735, 2369, 2233, 
        1734, 2427, 2232, 2188, 2138, 2428, 2139, 2141, 2140, 1961, 1885, 
        2424, 2117, 1933, 1978, 1977, 2049, 2414, 2252, 2017, 1932, 2115, 
        2114, 2116, 1884, 2112, 2016, 1931, 2110, 2111, 2109, 2423, 2113, 
        1926, 2047, 1930, 2108, 2399, 2107, 2084, 1925, 2106, 1929, 2431, 
        1976, 1975, 2198},
        VertexColors->None], 
       Line3DBox[{1749, 1864, 2331, 1748, 1863, 2330, 1747, 1862, 2329, 1746, 
        1861, 2328, 1745, 1860, 2327, 1744, 2371, 2236, 1743, 2370, 2235, 
        1742, 2435, 2234, 2166, 2436, 2167, 2169, 2168, 1937, 1890, 2410, 
        2020, 1936, 1980, 1979, 2124, 1889, 2420, 2087, 2076, 2078, 2077, 
        2123, 1888, 2019, 1935, 2121, 2390, 2259, 2122, 1887, 2145, 2086, 
        2085, 2119, 2389, 2118, 2120, 1886, 2018, 1934, 2201},
        VertexColors->None], 
       Line3DBox[{1757, 1868, 2335, 1756, 1867, 2334, 1755, 1866, 2333, 1754, 
        1865, 2332, 1753, 2373, 2238, 1752, 2372, 2237, 1751, 2445, 929, 1750,
         2400, 348, 1406, 388, 255, 1377, 346, 254, 1376, 344, 253, 343, 1375,
         252, 658, 1510, 251, 979},
        VertexColors->None], 
       Line3DBox[{1765, 1871, 2338, 1764, 1870, 2337, 1763, 1869, 2336, 1762, 
        2376, 2241, 1761, 2375, 2240, 1760, 2374, 2239, 1759, 2437, 2171, 
        2191, 2170, 2192, 1758, 2438, 2178, 1898, 1963, 1897, 2393, 2257, 
        2063, 2025, 1896, 2051, 1895, 2392, 2024, 2062, 2023, 1894, 2050, 
        1893, 2391, 2022, 2061, 2060, 1892, 1938, 1891, 2059, 2131, 2058, 
        2415, 1940, 1962, 1939, 2057, 2130, 2021, 2411, 2262},
        VertexColors->None], 
       Line3DBox[{1776, 1873, 2340, 1775, 1872, 2339, 1774, 2381, 2245, 1773, 
        2380, 2244, 1772, 2379, 2243, 1771, 2378, 2242, 1770, 2429, 2143, 
        2174, 2142, 2175, 1769, 2430, 2151, 1906, 2152, 1905, 2030, 2416, 
        2065, 2029, 1904, 2052, 1903, 2394, 2028, 1768, 2027, 1902, 2126, 
        2421, 2254, 2091, 1767, 2090, 1901, 2125, 1900, 2089, 1766, 2088, 
        2253, 2377, 1964, 1899, 2026, 2064, 2196},
        VertexColors->None], 
       Line3DBox[{1788, 1949, 1948, 2402, 1787, 2387, 2250, 1786, 2386, 2249, 
        1785, 2385, 2248, 1784, 2384, 2247, 1783, 2383, 2246, 1782, 2401, 
        1947, 2154, 2156, 2155, 1781, 2405, 2040, 2041, 1945, 2039, 2038, 
        2412, 1780, 2053, 2054, 1954, 2071, 2404, 2070, 1779, 2036, 2037, 
        1944, 2425, 2069, 2068, 1778, 2034, 2035, 1943, 2067, 2066, 1777, 
        2032, 2033, 2382, 1942, 2193, 2197},
        VertexColors->None], Line3DBox[{2199, 1941},
        VertexColors->None], Line3DBox[{1946, 2031, 2195},
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{899, 826, 2184, 920, 881, 2272, 1037, 288, 1956, 394, 226, 
        296, 852, 2148, 230, 857, 302, 551, 233, 556, 308, 1917, 557, 236, 
        559, 1922, 316, 738, 241, 566, 1927, 323, 741, 243, 2116, 754, 331, 
        860, 248, 2123, 766, 338, 767, 253, 345, 1938, 256, 775, 353, 776, 
        2125, 261, 783, 361, 1943, 784, 267, 371},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzr0rxHEcB/CPcLkIA2VVd56KcE6OlYWirrijlG671DG4QRmYLP4DA1Gn
MPsP5GkwymAwyEIZ2L1uePX+PHw//X69pa18pSEiSvw2Rhw3Rby0RPypa+p3
dbtcSUQcJSMKssgqOWaYZpY5Dr1JyT7SZJhg33y+OWKPBXrMDuQJKRZJc0rZ
2yV5xi395BngjqT9uVymxj2DFBmiYv8gL1jji4TvDcsPduxHZKvZt1znlTb9
qNxgjEcuKXHFE+MU3Jdlhg4313KTHzr1Vfus+pPJ+o1ZF9vqN3btu/VT9X8h
xzM3VPkH19UthA==
        "],
        VertexColors->None], 
       Line3DBox[{1014, 1180, 2264, 1015, 1191, 2274, 1039, 1202, 2282, 1052, 
        1213, 2289, 1064, 1609, 2440, 1610, 1611, 916, 1576, 1575, 1618, 2443,
         923, 1597, 1596, 2302, 1100, 1363, 1405, 1364, 2314, 1514, 675, 1369,
         2424, 756, 1412, 495, 1372, 2410, 496, 1374, 503, 1377, 505, 1382, 
        511, 2392, 1386, 513, 1389, 519, 2394, 1391, 521, 1407, 2404, 644, 
        790, 585, 592},
        VertexColors->None], 
       Line3DBox[{1016, 1181, 2265, 1018, 1192, 2275, 1040, 1203, 2283, 1053, 
        1214, 2290, 1065, 1224, 2295, 1077, 1234, 2299, 1089, 1244, 2303, 
        1101, 1612, 2442, 1614, 1615, 1616, 1617, 1579, 2428, 1578, 1619, 
        1620, 1621, 1600, 2436, 1599, 1134, 1379, 1406, 1381, 1413, 1453, 
        1499, 1454, 2393, 1388, 1456, 1484, 1455, 1390, 1457, 1500, 2416, 
        1458, 1393, 1460, 1486, 1459, 1394, 1463, 2412, 1502, 1464, 1398, 
        1468, 1558, 1467, 1488},
        VertexColors->None], 
       Line3DBox[{1020, 1183, 2266, 1021, 2343, 1194, 1042, 2345, 1205, 1055, 
        2348, 1216, 1067, 2352, 1226, 1079, 2357, 1236, 1091, 2363, 1246, 
        2305, 1103, 1255, 1114, 2369, 1264, 1125, 2370, 1272, 1136, 1626, 
        2445, 1280, 1146, 1601, 2437, 1288, 1155, 1580, 2429, 1296, 1164, 
        1399, 2401, 1304, 1172},
        VertexColors->None], 
       Line3DBox[{1022, 1184, 2267, 1023, 1195, 2276, 1043, 2346, 1206, 1056, 
        2349, 1217, 1068, 2353, 1227, 1080, 2358, 1237, 1092, 2364, 1247, 
        2306, 1104, 1256, 2315, 1115, 1265, 2321, 1126, 2371, 1273, 1137, 
        2372, 1281, 1147, 2374, 1289, 1156, 2378, 1297, 1165, 2383, 1305, 
        1173},
        VertexColors->None], 
       Line3DBox[{1024, 1185, 2268, 1025, 1196, 2277, 1044, 1207, 2284, 1057, 
        2350, 1218, 1069, 2354, 1228, 1081, 2359, 1238, 1093, 2365, 1248, 
        2307, 1105, 1257, 2316, 1116, 1266, 2322, 1127, 1274, 2327, 1138, 
        2373, 1282, 1148, 2375, 1290, 1157, 2379, 1298, 1166, 2384, 1306, 
        1174},
        VertexColors->None], 
       Line3DBox[{1026, 1186, 2269, 1027, 1197, 2278, 1045, 1208, 2285, 1058, 
        1219, 2291, 1070, 2355, 1229, 1082, 2360, 1239, 1094, 2366, 1249, 
        2308, 1106, 1258, 2317, 1117, 1267, 2323, 1128, 1275, 2328, 1139, 
        1283, 2332, 1149, 2376, 1291, 1158, 2380, 1299, 1167, 2385, 1307, 
        1175},
        VertexColors->None], 
       Line3DBox[{1028, 1187, 2270, 1029, 1198, 2279, 1046, 1209, 2286, 1059, 
        1220, 2292, 1071, 1230, 2296, 1083, 2361, 1240, 1095, 2367, 1250, 
        2309, 1107, 1259, 2318, 1118, 1268, 2324, 1129, 1276, 2329, 1140, 
        1284, 2333, 1150, 1292, 2336, 1159, 2381, 1300, 1168, 2386, 1308, 
        1176},
        VertexColors->None], 
       Line3DBox[{1030, 1188, 2271, 1031, 1199, 2280, 1047, 1210, 2287, 1060, 
        1221, 2293, 1072, 1231, 2297, 1084, 1241, 2300, 1096, 2368, 1251, 
        2310, 1108, 1260, 2319, 1119, 1269, 2325, 1130, 1277, 2330, 1141, 
        1285, 2334, 1151, 1293, 2337, 1160, 1301, 2339, 1169, 2387, 1309, 
        1177},
        VertexColors->None], 
       Line3DBox[{1032, 1341, 2396, 1342, 1033, 1200, 2281, 1048, 1211, 2288, 
        1061, 1222, 2294, 1073, 1232, 2298, 1085, 1242, 2301, 1097, 1252, 
        2311, 2312, 1109, 1261, 2320, 1120, 1270, 2326, 1131, 1278, 2331, 
        1142, 1286, 2335, 1152, 1294, 2338, 1161, 1302, 2340, 1170, 1400, 
        2402, 1401, 1402},
        VertexColors->None], 
       Line3DBox[{1171, 1303, 1561, 1428, 1408, 1466, 2405, 1465, 1163, 1295, 
        1582, 1581, 1585, 2430, 1584, 1154, 1287, 1603, 1602, 1608, 2438, 
        1607, 1145, 1279, 2400, 1380, 1135, 1271, 2435, 1598, 1124, 1263, 
        2427, 1577, 1113, 1254, 2441, 1613, 1102, 2304, 1245, 2362, 1090, 
        1235, 2356, 1078, 1225, 2351, 1066, 1215, 2347, 1054, 1204, 2344, 
        1041, 1193, 2342, 1019, 1182, 2341, 1017},
        VertexColors->None], 
       Line3DBox[{534, 434, 1339, 403, 2395, 1010, 436, 1343, 404, 1035, 440, 
        1345, 2388, 406, 1050, 446, 1347, 608, 609, 453, 2407, 1349, 409, 
        1075, 460, 553, 411, 1087, 2408, 466, 1357, 730, 2397, 1099, 476, 
        1411, 414, 2403, 1111, 561, 1367, 2399, 743, 1122, 1323, 1515, 2389, 
        758, 1132, 682, 1510, 659, 1143, 506, 2411, 1631},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0DsvQ2EAx+G32qKCBINBgrYJi8RSajAYpGIRDCIhJCRYqoOBMLGgLnGZ
kEhsfACruMVmsCA+BIOJhafDk1/7/s85zWlypjC6GAkhFOiNh9BVHkKzJjXF
aiKEtH5HQ8hpi61bs6zberQ6FsKJ8xtaWWOTW7Zosp/qXem59LPNPUXa7Wf6
QN4zU5pjhxd2ybjmURv93oAO8sMvfbZzTbPBK3+8MeV573pBcG+bDrPHnG1f
x93/pCNEXRNh2RbTMmbtl7a4zx06wZi9wvcEleRdc+W8yudOneaAQ1ZsHzpP
wX0LWuO62tJ/aPsqvY/zjH5S57yBeor2a2dD9mfNssQRk/bj0jvqP9EdMSE=

        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwNzCtLg2EYBuBHpoP5D+bZYh0YDUOWRL5k+MpY2H6AooJVMFhNOpHZ3A+w
O4xmD0sGzzDLwLOwObzCxf08z837ztbWVlaHIiKhNRKxzxUHLPDGO1u5iKNh
eybiw/7JHfes65q6Uer2sWzEoVxkl3NOdXmuzW1uKPHFN2e6OTrmDf+9ygce
uXCfp2Ee9/exXOKHXy51RSZ0U0ySuPfoc6vb8eey/LMPeOKZTfcX95QT+7S3
TZmyx7a+4NbVVymbZ6jwD/WrMLg=
        "],
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1: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
     "],
    VertexNormals->CompressedData["
1:eJy8vHk4lW/UNiwzUalIpURIk4RK0b6KMkSkiCJDIRkKUYaKZK4UJcmQWVTI
TOzb3CBJ5nneSKGSFPFe66r3Ob7neI7n+97v/d7j+/1zHr997G73va5znetc
67r2LXL6wlELZiYmpttcTEwsGP3EZtm5AxjUXh09XozI7gTt0c5leUi6u1lK
yWqQsr26RwMjWvPgxmHPlw3IeGjtcoGf76izYixmGNHD1YY0KZ0xtCHuaeqg
TDglzl7APSQTjkyeqiZzzYwjHw5K+nugOWXdU+A/FGiONM//qv02P44mgx2Y
jfOkKZ2oki8eedJoaRNf5zz+3Ol9tLmk7Az956UX8/PbZmhid+Pn4fMPehiE
q+jtuhhRFa2Da558nu0d/LhrMpgeOgf/H0xz+/P38zqtM/mqvSfpv+F/501o
f3EcrbUql8oOk6Yz/f3P8y9MoP/8///nP18x/jb+uS8DDedpRWCk+q1S2w7I
5iP5apaer4cY1CYrnz8YkZNIVFPnWCUqdCnSE2tsp1Y2KoVjRC8KR79eVRhB
Ox5zzY7dfE7lyWzlHr/5HH1hNGg/GxhHj0p7VyTKuFAXBbyTnsi4IGUjr/e5
+HkVcnjZhl4oU5xjMf7zL5TRIQFeGsThum21hjH7Eupp69zcPNsS9Oni3B/4
vIpFR0+Pv43++8UMjlcrLTXrN4nboB5r/6REIn1gCuKYQFv77W88PwSEifuM
OtA7SHwv0Dr+U5z3/f8eZ02+dfp/zjFQnmGzIkbK7axUVGpAKRJ7NFA+5MGg
qvkVGjAi9rmNIaKbXyKans5Ad3I/tbfamq0nuR95FUUbXcnuRnfv/d4nzldK
Wbss0cKIpEPcPbjtxlGOuQVVefUWxSJi4FN19RYy3G7Kbz03jt5GL27mldOn
Mv1lvgvJ6aMrzTLVMzgOf5bR3h3pFaVusNn9mu8VRUqj7ZMQH5pxUGpq4Rjd
qrh/fj59jDbr10fitqCcPbZrMp++rBzimE9jzfwbz087L3/Xyfeme5D43qDJ
/Kc4H/kvcX7Yb3jNe1Dqv3w+pfJuYPfQlv/P61JT+sZ/69QgWlXsdQYjZe9c
03bi43v02Mi1WzyQQW2+2tmOEa1enN8x4ZuLHN8zB9i0DlKLqWPPMKJFG94e
To7/gEI6Teok3D5S5z0VZjCi3Z6PXi7f+QX5Gs3KT1ExVMDCSrWfVAxS4e3V
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
b8sPOHpAvmgovXkN+SJOVZH6q57ycxfUR51bQz5QH9dVddVBffSsqVeCePap
W92FeNa0W09BPP2379sFefR8TuIq5JFJK70S8mjf79v9wJOQbfQZ4Mmvi70X
gSc3DcOyIY8++CySgzyayzEmeZR8fteTgLVYz+fYLmNEhevXapxT70THLkzr
x+C4D78W5seI5uSDpNfffot2K+mTvEMXEcm7S2uTyDxh3e514pB3Wx3WL4e8
C1XbtRvybkHv7UDIu20uzMaQd6e2e/lC3n1P6FkAc2OTLxeWwtyYrdeZzI3z
FgXxw3x4jnfsDMyHU8QmyLnfwLZ3wsCf2OUB54E/+u3LSV+fOmFSBH77tW18
K/jttu/anuC3FRYtSIXPzxmJf4bPRbdakbnBnWDeMIi/XFH0C4i/hvZDe4g/
R7ommQulnnA6A/7/NfdqZ/D/L30OM2CeebdvJyvMM7cvSzsJ80wH7Q3Ltg5X
UHb2Tw9gROmmtgedRP9v9pHX0Zoh/rtWHFgB8fc0OV0B8Xe6WRwG/cgy5Q0Z
0I9cqpj6Bf3IJ8O/fd+Y39++7+z7v31fv+rGggU3GGiT+qUUjFTsKW1LibYC
VHrcuQrqaXhwVwnUU6+Os+ehnrZOuKkCTxo3rCZ6m/LRuRx4otrqZQn+//Tr
xR7g/+cuthD/364sWwrzQBm+ziaYB35s0CfzXuNElougV3rJT7JBr4LqPhAf
q6d5LAR0gC6hWAg6wPb4KNEBkcTGjeCrD1/euBh89VEHM+KrvTosHSHv1siH
BUDeJYuo+UHe6SttWgM+jSN/O+lTGmOc14JPe/1ZlBn0za/Lfgr0jevzNNG3
ydgxZfCr6QrfyJxhyQEbMmcQPaCfDftZr5QlymE/K/PAF7Kf5f1gN+kXCpf3
FoPO3GNWIPOTnTtbl4GfjE6zpoGfZJrcROYGkZtPJEO+C1iVdkC+c1RcIvmO
NtzTtk3oR37DJYoYqVVLxFlCK7vREndxlhe4jjxIS2yDOjK57p4l1JFmi+MS
4Ov0o07tAV83OryF9PvbN6/1Ax7y7G8sAR4erN5M6uYS7d0lwJOfTg5SwJPd
cbqEJ70TIwnQ/253bfSB/ne15C1p6H/lQ14HAX9curkKgD+Wf+6Qfnb2psUU
+MPYd2HywJ9284pzwJ+FL06l1PX2oy2nS3IwUoY19sOrg7pQ4r69vxtfDaDa
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
DQ==
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"t\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(13\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{338.2453909736099, 250.04888546944625`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{2.0000005714285716`, 9.999999428571428}, {0., 
   2.9999997857142855`}, {-2., 5.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.6711853887521624, -3.060510599321303, 1.2778047759213933`},
  ViewVertical->{0.08089284450781972, 0.3688599486435623, 
   0.9259582528354625}]], "Output",
 CellChangeTimes->{{3.923177032401803*^9, 3.9231771831214533`*^9}, {
   3.9231775750731883`*^9, 3.923177621663026*^9}, {3.9231777712278414`*^9, 
   3.9231778104096575`*^9}, 3.9231778927776995`*^9, {3.923177945462509*^9, 
   3.923177978852538*^9}, 3.9231780393923626`*^9, {3.923195520796568*^9, 
   3.9231955431489716`*^9}, {3.9231955777377377`*^9, 3.923195591172228*^9}, {
   3.9231959201925592`*^9, 3.923196041164007*^9}, {3.9231961586107483`*^9, 
   3.9231962244910727`*^9}, {3.9231963829275007`*^9, 3.923196518220417*^9}, {
   3.923197888882296*^9, 3.9231979933591223`*^9}, {3.9231980418572984`*^9, 
   3.9231980938224173`*^9}, {3.923198140292457*^9, 3.9231981648390064`*^9}, {
   3.923198217150701*^9, 3.92319824704463*^9}, 3.923198278116762*^9, 
   3.9231983629130588`*^9, 3.923198393559039*^9, {3.9231985352595243`*^9, 
   3.923198555241894*^9}, {3.923198591192893*^9, 3.923198614423025*^9}, {
   3.9231987065264254`*^9, 3.9231987393123674`*^9}, {3.923198804744572*^9, 
   3.923198890780162*^9}, {3.92319899256867*^9, 3.9231990729311285`*^9}, 
   3.9231991329852457`*^9, {3.923199196403758*^9, 3.9231993565098486`*^9}, 
   3.923199799305116*^9, {3.9231998818659496`*^9, 3.9231999270887337`*^9}, {
   3.9232001327956777`*^9, 3.923200177359746*^9}, {3.9232002772766857`*^9, 
   3.923200302023197*^9}, 3.923200352698736*^9, {3.9232004733103*^9, 
   3.9232004813126106`*^9}, {3.923200527809308*^9, 3.9232005523241878`*^9}, {
   3.923200671073737*^9, 3.923200696412343*^9}, {3.923200801849886*^9, 
   3.923200928838082*^9}, {3.923200969860751*^9, 3.9232009957569757`*^9}, {
   3.923201026331765*^9, 3.923201231087549*^9}, {3.923201301561346*^9, 
   3.9232013088767977`*^9}, 3.923201340418555*^9, {3.9232014884632697`*^9, 
   3.9232015013504453`*^9}, {3.923201614783291*^9, 3.9232016251382904`*^9}, {
   3.9232020738856263`*^9, 3.9232021664445205`*^9}, 3.923202252514344*^9, {
   3.9232024286947126`*^9, 3.9232024706713095`*^9}},
 CellLabel->
  "Out[1405]=",ExpressionUUID->"dc68670f-2ec0-4258-afbb-139c056f40f5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
/2u6ZRGRln/tAxE3bm7Bq0v/n/8PwVrYHA==
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwl1WV01mUYgHEYY6MRk4bRZRx7xYLRWBjnKKjIgDEYAxQRbLobTELplMak
S0XBIw2DjW2U+UUlN/w9hw/X7vu63vec7bx7/s8b071/5+ySJUqUuOJHmPcj
Ag+gFB5EJB5CaTyMKDyCaDyKMohFWcShHOJRHgmogHQk4iDGobpfVtFcjR54
n18xW6KL/ZA5Hp/ba6BS+F3mGrMnqvojh/Gr9iT8Y++Kw/YJ4b1en89rojIf
wn+1x2It74XNWjUM167xZHzC/+Uv4gifiBwtFgu0WrhFG8oP2uOwjmdgi1Yd
I7TrPAWf8v/4SzjKJ+GUFoeFWm1U0d7kh+zxWM97Y6tWAyO1Ip6K2fwSfxnH
+GSc1uKxSKuDW7W3+GF7AjbwTGzTamKUVsxbYQ6/zLvhOJ+CXC0Bi7W6uE17
mx+xJ2Ij74PtWi2M1m7wNMyNuHmWXsEJPhV5WiKWaDG4XXuHH7W3xCbeFzu0
2hgTDiJaG/P4VXt3nOTTcEZriaVaPdyhvcuP2ZPwJc/CTq0OxoazjTbaZ/ya
PR05fDrytSQs0+rjTu09ftyejK94P+zS6mKcFoG24Xzy6/YeOMVnoEBLxnKt
Ae4K55ufsKfga56N3VoMxmul0E6bz4vsPXGaz0ShloIVWkNU1Ybxk/ZUfMP7
Y49WDxO0SLTXFvBiey/k8lk4q6VipdYI1bThPMfeCt/yAdir1cdErTQ6aAv5
DXsG8vgHOKe1wiqtMaprI/gpexq+4wPxvdYAk7QodNQWRdy8cHrzM9YPcZ6n
4QutSXj+tZH8dDgT2MxfxQ9aQ0zWotFJW8xLIpPn849wgbfGaq1puBO0UTw3
nAls4a/hR60Rpmhl8Ji2hEegDy/gH+Mib4M1WrNwJ2ijeV44E9jKB2Gf1hhT
tbJ4XFvKS6EvLwz3DX7jbbFWax7uBG0MPxPOBLbx1/GT1gTTtHJ4QlvGI5HF
z4b7Br/zdlintQh3gjaW54czge18MH7WmmK6Vh5Past5afTj5/h1+/PYxWfz
P+ztsZ7fHe4HbRwvCOcDO/gl/gy28Df4fnszzOAV8JS2gkchfPmc50X2F7Cb
z+F/2jtgA78n3Bvh+4AXhnODnfwyfxZb+RB+wN4cM3lFdNZW8mj05xd4sb0L
9vC5/C97R2zk94Zz6Usvne8Pd0v4LrGfDWcrfOZeywifhX7FfA7b9KH8F3sL
zOKVvS/LXik81/Zu9n3hHrAPsj/t/avMMqihDQifi5nJL3rthtk13F3a3nBf
mgPD2TTnef1ve6dwV/JNXq9iZodny7wvPAtmj3AXmAfC820ODv9r838p7vKH

        "],
        VertexColors->Automatic], LineBox[CompressedData["
1:eJwl1NVPVnEcgPFX1E0sMLCmm0wRRbFQ+CsMQgEDlE3ndCY22HlhB2F3d2Nc
qDNQVLDj3gQFFHV64+fMi4fv93l+h/HunPMSnTM1ZUq9UCjUz4+4+qHQTbOV
OS0sFIox5zursMejEy9wHmlO5l3MCN7AHMujzTLezpzF0/zuKTMcHbXpzpqZ
E/lnZyH7aPt9Pco+w75HrjYH4bLeUp8a9v/zNbKPs5fbu7hujf29fRCaOJvA
7+h/zHTc0vP4U3tvFAafHQ1dm8Mf2Yc5P21vjBn8C6/nPIuX8r28xj4YV3h/
dNXW8g/2wbjL//IM3Ob5/Jm9D4p4CwzXzvAmyOWVfB9q+RCUaAmI0dbxj/Yh
uMcX4LnWF8XBPUG6dpY3xUxexfejG9Zrn7ShuM8XIgPn9GaYpX/lBxCLDcHz
0JJRyhchE+f15pitf+MH0R0btS9aCh7wxXgRPCNsC94fjNAu8AjM4dX8EHpg
k1appeIhX4KXWn9s11pjpHaRR2Iur+GHEYfNWpWWhjK+FKNwSW+BeXotP4Ke
2KJ9DZ41HvFleKUlYEfw7mG0dpm3xHze3Dswyf5dD7Nn2zubD5y1MXN5rHnU
+Xf7UFx1NgC9tK38W/Dc8ZgvRxau6K2Qp//gxxCPAq06eK54wlfgtTYAO4O/
iWythLdGPq/jx9EbhVqNloFyvhJvtIHYpbXFGO0qj8IC/pOfwA+ejGvaQPTR
initPRMVfBXeaonYHXzHMVa7xttgIf/FT6KOp+C6loi+WnFwL4P3Ak/5arzT
koLvvNYeOdp13haL+O/g/wd+8lTc0JIQ7r6P5xX2DvY59u5mP9f+A1vml5U=

        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$129999#1"]& ]},
    VertexColors->CompressedData["
1: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
TVCpAoz4314QZa/+f/n/ARJ3QsY=
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox["z", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.9999997959183675`, 4.9999997959183675`}, {-10., 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.923177032401803*^9, 3.9231771831214533`*^9}, {
   3.9231775750731883`*^9, 3.923177621663026*^9}, {3.9231777712278414`*^9, 
   3.9231778104096575`*^9}, 3.9231778927776995`*^9, {3.923177945462509*^9, 
   3.923177978852538*^9}, 3.9231780393923626`*^9, {3.923195520796568*^9, 
   3.9231955431489716`*^9}, {3.9231955777377377`*^9, 3.923195591172228*^9}, {
   3.9231959201925592`*^9, 3.923196041164007*^9}, {3.9231961586107483`*^9, 
   3.9231962244910727`*^9}, {3.9231963829275007`*^9, 3.923196518220417*^9}, {
   3.923197888882296*^9, 3.9231979933591223`*^9}, {3.9231980418572984`*^9, 
   3.9231980938224173`*^9}, {3.923198140292457*^9, 3.9231981648390064`*^9}, {
   3.923198217150701*^9, 3.92319824704463*^9}, 3.923198278116762*^9, 
   3.9231983629130588`*^9, 3.923198393559039*^9, {3.9231985352595243`*^9, 
   3.923198555241894*^9}, {3.923198591192893*^9, 3.923198614423025*^9}, {
   3.9231987065264254`*^9, 3.9231987393123674`*^9}, {3.923198804744572*^9, 
   3.923198890780162*^9}, {3.92319899256867*^9, 3.9231990729311285`*^9}, 
   3.9231991329852457`*^9, {3.923199196403758*^9, 3.9231993565098486`*^9}, 
   3.923199799305116*^9, {3.9231998818659496`*^9, 3.9231999270887337`*^9}, {
   3.9232001327956777`*^9, 3.923200177359746*^9}, {3.9232002772766857`*^9, 
   3.923200302023197*^9}, 3.923200352698736*^9, {3.9232004733103*^9, 
   3.9232004813126106`*^9}, {3.923200527809308*^9, 3.9232005523241878`*^9}, {
   3.923200671073737*^9, 3.923200696412343*^9}, {3.923200801849886*^9, 
   3.923200928838082*^9}, {3.923200969860751*^9, 3.9232009957569757`*^9}, {
   3.923201026331765*^9, 3.923201231087549*^9}, {3.923201301561346*^9, 
   3.9232013088767977`*^9}, 3.923201340418555*^9, {3.9232014884632697`*^9, 
   3.9232015013504453`*^9}, {3.923201614783291*^9, 3.9232016251382904`*^9}, {
   3.9232020738856263`*^9, 3.9232021664445205`*^9}, 3.923202252514344*^9, {
   3.9232024286947126`*^9, 3.923202470826543*^9}},
 CellLabel->"Out[1406]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ECX/z4eFdMH/AoykRqg=\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"20713b12-c97e-4424-a61f-334acad8db60"]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Clear", "[", "r", "]"}]}]], "Input",
 CellChangeTimes->{{3.9231758181236334`*^9, 3.9231758199432635`*^9}, {
  3.923177793643035*^9, 3.923177793773019*^9}, {3.923177938503121*^9, 
  3.9231779417924204`*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"fddc9b8a-86f1-49c3-b9e8-14afa97c83aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\:539f\:59cb\:504f\:5fae\:5206\:65b9\:7a0b", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Peqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "-", 
         RowBox[{"3", " ", "q", " ", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"x", ",", "t"}], "]"}], "^", "2"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}], " ", "q", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"x", ",", "t"}], "]"}], " ", 
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "t"}], "]"}]}], ")"}], ",", "x"}], "]"}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}], " ", "q", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "3"}], "}"}]}], "]"}]}]}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}], " ", "q", " ", 
          RowBox[{"v", "[", 
           RowBox[{"x", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}], "-", 
         RowBox[{"3", " ", "q", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"x", ",", "t"}], "]"}], "^", "2"}], " ", 
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "t"}], "]"}]}], ")"}], ",", "x"}], "]"}]}], 
         "+", 
         RowBox[{"3", " ", "q", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}], " ", "q", " ", 
          RowBox[{"u", "[", 
           RowBox[{"x", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "3"}], "}"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}], " ", "q", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "3"}], "}"}]}], "]"}]}]}], "==", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:6279\:91cf\:9a8c\:8bc1", "\:ff0c", 
     "\:867d\:7136\:7b28\:62d9\:4ee3\:7801", "\:ff0c", "\:4f46\:5f88\:5feb"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Peqns", "/.", " ", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "->", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "t"}], "}"}], ",", 
             RowBox[{"uNicer", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"v", "->", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "t"}], "}"}], ",", 
             RowBox[{"vNicer", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}], "&"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "uNicer", "]"}]}], "}"}]}], "]"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9231762897163467`*^9, 3.923176292550149*^9}, {
  3.9231763331551247`*^9, 3.923176365160632*^9}, {3.9231769677247715`*^9, 
  3.9231769678655276`*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"3235bafa-6591-4da2-b841-17710e7007d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Equal]", 
     "0"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Equal]", 
     "0"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.923176968130968*^9, 3.9231775352634535`*^9, 
  3.923197870802898*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"e340fd69-3780-4f92-8a3f-b8873e0f0be7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"v", ",", "u"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9231769471133747`*^9, 3.9231769643171988`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"f93a8c67-ba06-4797-9052-6e30cf3f1bb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "\[Gamma]"}], 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"Cosh", "[", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}]}], "//",
   "TrigToExp"}]], "Input",
 CellChangeTimes->{
  3.92319942204466*^9, {3.9231994806847734`*^9, 3.923199481241698*^9}, 
   3.9232026980269527`*^9},
 CellLabel->
  "In[1407]:=",ExpressionUUID->"f4c1445f-a8b6-4ef3-90f3-d26ae6620b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox["c", "q"]}]], " ", "\[Rho]"}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"-", 
      FractionBox["c", "q"]}]], " ", "\[Gamma]", " ", "\[Rho]"}], 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}]]}], ")"}]}], "+", "\[Gamma]",
     "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}]]}], ")"}], " ", 
     "\[Rho]"}]}]]}]], "Output",
 CellChangeTimes->{3.9231994818424897`*^9, 3.9232027014508505`*^9},
 CellLabel->
  "Out[1407]=",ExpressionUUID->"e7957718-5cfb-4eb7-9297-316f8eeca12e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"Cosh", "[", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}], "==", "0"}], "/.", 
     RowBox[{
      SubscriptBox["\[Xi]", "0"], "->", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "t"}], "}"}]}], "]"}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.9231996264781704`*^9, 3.9231996873748665`*^9}, {
  3.9231997390041237`*^9, 3.9231997582388706`*^9}, {3.9232022917358923`*^9, 
  3.923202369261574*^9}},
 CellLabel->
  "In[1374]:=",ExpressionUUID->"acfed9ac-ae79-4c91-967a-0a17213ece7f"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\) \
\:6b63\:5728\:4f7f\:7528\:53cd\:51fd\:6570\:ff0c\:56e0\:6b64\:53ef\:80fd\:65e0\
\:6cd5\:627e\:5230\:67d0\:4e9b\:89e3\:ff1b\:8bf7\:4f7f\:7528 Reduce \:6765\
\:83b7\:53d6\:5b8c\:6574\:7684\:89e3\:4fe1\:606f.\"", 2, 1374, 23, 
   33394715318226067882, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9231996792572317`*^9, 3.9231996891199613`*^9}, 
   3.9231997589541674`*^9, {3.92320229632653*^9, 3.9232023699560747`*^9}},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[1374]:=",ExpressionUUID->"74b23832-664b-4cf0-\
86e6-4d342196555c"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"\:65b9\:7a0b\:53ef\:80fd\:65e0\:6cd5\:7ed9\:51fa\:6240\:6709 \\\" solve \
\\\" \:53d8\:91cf\:7684\:89e3.\"", 2, 1374, 24, 33394715318226067882, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9231996792572317`*^9, 3.9231996891199613`*^9}, 
   3.9231997589541674`*^9, {3.92320229632653*^9, 3.923202369970065*^9}},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[1374]:=",ExpressionUUID->"04565821-a7fe-4e6d-\
a359-178a678e008e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "-", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "-", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "-", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "-", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "-", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "-", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "-", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "-", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "2"], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Gamma]", "-", 
                   SuperscriptBox["\[Rho]", "2"], "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]]}], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", "t"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", "q", " ", 
          RowBox[{"ArcCosh", "[", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "2"], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"1", "+", "\[Gamma]", "-", 
                  SuperscriptBox["\[Rho]", "2"], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], " ", 
                    SuperscriptBox["\[Rho]", "2"]}], "+", 
                    SuperscriptBox["\[Rho]", "4"]}]]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]]}]}]], 
           "]"}]}]}], "c"]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.9231996793061333`*^9, 3.923199689139949*^9}, 
   3.923199758976931*^9, {3.9232022963473916`*^9, 3.923202369998084*^9}},
 CellLabel->
  "Out[1374]=",ExpressionUUID->"1e5ebebb-a749-4ebe-b789-5fb8c597c359"]
}, Open  ]],

Cell[BoxData["Continuous"], "Input",
 CellChangeTimes->{{3.923199819955492*^9, 
  3.923199834802842*^9}},ExpressionUUID->"f1b44fe2-79bf-4384-b3eb-\
71f14590b5cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox["c", "q"]}]], " ", "\[Rho]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "\[Gamma]"}], 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"Cosh", "[", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}], "]"}]}]}]]}], ")"}]}], "//",
   "TrigToExp"}]], "Input",
 CellChangeTimes->{{3.923201462378968*^9, 3.9232014699132686`*^9}, 
   3.9232015693449745`*^9},
 CellLabel->
  "In[1289]:=",ExpressionUUID->"5ae62e5d-d3a6-4fa3-ad08-d5487e669677"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox["c", "q"]}]], " ", "\[Rho]"}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"-", 
      FractionBox["c", "q"]}]], " ", "\[Gamma]", " ", "\[Rho]"}], 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}]]}], ")"}]}], "+", "\[Gamma]",
     "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox["c", "q"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
            SubscriptBox["\[Xi]", "0"]}], ")"}]}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox["c", "q"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "c"}], " ", "t"}], "+", "x", "+", 
           SubscriptBox["\[Xi]", "0"]}], ")"}]}]]}], ")"}], " ", 
     "\[Rho]"}]}]]}]], "Output",
 CellChangeTimes->{3.9232014702931905`*^9, 3.9232015708806086`*^9},
 CellLabel->
  "Out[1289]=",ExpressionUUID->"4f9b9c80-95ee-4cc1-b432-6cd91bdb3d76"]
}, Open  ]],

Cell[BoxData["Solve"], "Input",
 CellChangeTimes->{{3.9232022781717925`*^9, 
  3.923202280091869*^9}},ExpressionUUID->"86c3f88b-8022-430b-b2fc-\
45a993e92173"]
},
WindowSize->{1141.2, 579.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (2021\:5e7412\:67082\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ef40e3d1-5ddd-4394-979e-d58d1bc0f5cb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 222, 3, 43, "Input",ExpressionUUID->"6258f761-c50d-4f57-b4a7-8eb7437aaf67"],
Cell[783, 25, 3914, 108, 119, "Input",ExpressionUUID->"26f16399-101c-4749-8336-ad901746abfe"],
Cell[4700, 135, 1123, 24, 104, "Text",ExpressionUUID->"e8229659-df8f-4f86-a887-1cb6ac7c40aa"],
Cell[5826, 161, 152, 3, 28, "Input",ExpressionUUID->"d2a30b36-3db8-4437-ab8e-e9d9a21dac54"],
Cell[CellGroupData[{
Cell[6003, 168, 2578, 67, 228, "Input",ExpressionUUID->"c236e668-494b-41c8-b878-3b2816f5cc0c"],
Cell[8584, 237, 13710, 401, 394, "Output",ExpressionUUID->"82c812db-5fa0-4fb7-a446-b9b0022239f2"]
}, Open  ]],
Cell[22309, 641, 209, 3, 51, "Text",ExpressionUUID->"dadb237d-ac88-425e-82a2-b658da8bf34a"],
Cell[CellGroupData[{
Cell[22543, 648, 1245, 34, 135, "Input",ExpressionUUID->"1047973f-9852-431e-a981-0e547f2437db"],
Cell[23791, 684, 248, 5, 32, "Output",ExpressionUUID->"9cc10722-9fa0-45ea-a8ec-dcfaa85a6532"],
Cell[24042, 691, 16813, 505, 464, "Output",ExpressionUUID->"59565b8d-ed74-459e-8d5d-1970c3a233ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40892, 1201, 3900, 96, 206, "Input",ExpressionUUID->"eda95fc7-d7a7-47d3-8af9-7c6bb1372d09"],
Cell[44795, 1299, 24707, 787, 750, "Output",ExpressionUUID->"a51ee951-9d02-4113-9076-c9fc349a03ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69539, 2091, 841, 23, 97, "Input",ExpressionUUID->"69d4ca2b-83da-4c8f-a2e8-fdf61ab9ff6a"],
Cell[70383, 2116, 12570, 399, 382, "Output",ExpressionUUID->"79a606e2-7501-4678-a027-9a21aaafcc13"]
}, Open  ]],
Cell[82968, 2518, 178, 4, 28, "Input",ExpressionUUID->"c9ac7d06-920f-4d7d-afa8-744c6020d963"],
Cell[83149, 2524, 211, 4, 35, "Text",ExpressionUUID->"01561a3d-12ee-40fc-b5f5-0c95b119f18d"],
Cell[83363, 2530, 7004, 189, 411, "Input",ExpressionUUID->"25768443-0f97-46eb-bd26-d3861dca0f81"],
Cell[90370, 2721, 154, 3, 28, "Input",ExpressionUUID->"3e175d65-0142-425f-b48e-abe52cdcf5b4"],
Cell[CellGroupData[{
Cell[90549, 2728, 3042, 93, 115, "Input",ExpressionUUID->"d438360f-e4c4-474c-bc8c-4bf2a2a7884e"],
Cell[93594, 2823, 41552, 1192, 1195, "Output",ExpressionUUID->"d7936231-bbb3-4fdc-b0cc-5841fa1501f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135183, 4020, 6848, 166, 498, "Input",ExpressionUUID->"95b60335-6fea-4622-9f0d-363dca92a17a"],
Cell[142034, 4188, 185340, 3056, 292, "Output",ExpressionUUID->"dc68670f-2ec0-4258-afbb-139c056f40f5"],
Cell[327377, 7246, 58189, 973, 248, 43386, 735, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"20713b12-c97e-4424-a61f-334acad8db60"]
}, Open  ]],
Cell[385581, 8222, 329, 7, 43, "Input",ExpressionUUID->"fddc9b8a-86f1-49c3-b9e8-14afa97c83aa"],
Cell[CellGroupData[{
Cell[385935, 8233, 5049, 142, 352, "Input",ExpressionUUID->"3235bafa-6591-4da2-b841-17710e7007d2"],
Cell[390987, 8377, 683, 19, 32, "Output",ExpressionUUID->"e340fd69-3780-4f92-8a3f-b8873e0f0be7"]
}, Open  ]],
Cell[391685, 8399, 271, 6, 64, "Input",ExpressionUUID->"f93a8c67-ba06-4797-9052-6e30cf3f1bb5"],
Cell[CellGroupData[{
Cell[391981, 8409, 1186, 37, 90, "Input",ExpressionUUID->"f4c1445f-a8b6-4ef3-90f3-d26ae6620b4b"],
Cell[393170, 8448, 2071, 67, 86, "Output",ExpressionUUID->"e7957718-5cfb-4eb7-9297-316f8eeca12e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395278, 8520, 1249, 36, 68, "Input",ExpressionUUID->"acfed9ac-ae79-4c91-967a-0a17213ece7f"],
Cell[396530, 8558, 647, 13, 28, "Message",ExpressionUUID->"74b23832-664b-4cf0-86e6-4d342196555c"],
Cell[397180, 8573, 503, 10, 28, "Message",ExpressionUUID->"04565821-a7fe-4e6d-a359-178a678e008e"],
Cell[397686, 8585, 20967, 594, 952, "Output",ExpressionUUID->"1e5ebebb-a749-4ebe-b789-5fb8c597c359"]
}, Open  ]],
Cell[418668, 9182, 162, 3, 28, "Input",ExpressionUUID->"f1b44fe2-79bf-4384-b3eb-71f14590b5cb"],
Cell[CellGroupData[{
Cell[418855, 9189, 1162, 36, 90, "Input",ExpressionUUID->"5ae62e5d-d3a6-4fa3-ad08-d5487e669677"],
Cell[420020, 9227, 2071, 67, 86, "Output",ExpressionUUID->"4f9b9c80-95ee-4cc1-b432-6cd91bdb3d76"]
}, Open  ]],
Cell[422106, 9297, 159, 3, 43, "Input",ExpressionUUID->"86c3f88b-8022-430b-b2fc-45a993e92173"]
}
]
*)

